package com.usmc.usmcdrummer.pftcalculator;

import android.text.Spannable;
import android.text.SpannableStringBuilder;
import android.text.style.StyleSpan;
import android.util.Log;

public class CFT {

    private int ACLScore = 0;
    private int MUFScore = 0;
    private int MTCScore = 0;

    private boolean Gender = true; //true for male -- false for female
    private boolean Elevation = false; //true for if adjustment is required and checkbox is checked

    private int ageGroup = 0;

    private int TotalScore = 0;
    private int CFTClass = 0; //0 for fail

    private int ACL = 0;
    private int MTCMin = 0;
    private int MTCSec = 0;
    private int MUFMin = 0;
    private int MUFSec = 0;

    public CFT() //Generic constructor
    {

    }

    public CFT(int lifts, int MTCMinutes, int MTCSeconds, int MUFMinutes, int MUFSeconds, boolean gender, int age_group, boolean elevation) {
        ACL = lifts;
        MTCMin = MTCMinutes;

        MTCSec = MTCSeconds;

        MUFMin = MUFMinutes;

        MUFSec = MUFSeconds;

        Gender = gender;
        ageGroup = age_group;
        Elevation = elevation;
        makeScores();
    }


    public String getResults(String agegroup) {
        String resultsString = "RESULTS" +
                "\n\nAge Group: " + agegroup + "\nGender: " + genderString() + "\n";

        resultsString += "\nMTC:  " + Integer.toString(MTCMin) + ":" + String.format("%02d", MTCSec) + "  Score " + Integer.toString(MTCScore);


        resultsString += "\nACL: " + ACL + "        Score: " + ACLScore;

        resultsString += "\nMANUF: " + MUFMin + ":" + String.format("%02d", MUFSec) + "   Score: " + MUFScore;

        resultsString += "\n\nTotal Score: " + getTotalScore() + "\nClass: " + getCFTClassString() +
                "\n" + elevationString();


        return resultsString;
    }

    public SpannableStringBuilder getWhatIfResults(int desiredClass, int desiredScore, String ageString) {
        int startLength;
        SpannableStringBuilder resultsString = new SpannableStringBuilder();
        int remainingScore = desiredScore - TotalScore;//TotalScore is the calculated CFT score with what was entered
        boolean MUFNeeded = false;
        boolean MTCNeeded = false;
        boolean ACLNeeded = false;
        boolean failedEvent = false;
        if (remainingScore < 0)
            remainingScore = 1;

        if((MUFMin !=0)&&(MUFScore==0))
            failedEvent = true;
        if((ACL!=0)&&(ACLScore==0))
            failedEvent = true;
        if((MTCMin !=0)&&(MTCScore ==0))
            failedEvent = true;

        if (failedEvent)
        {
            resultsString.append("You failed an event!");
            return resultsString;
        }

        int remainingScorePerEvent=0;
        int eventsNeeded = 0;
        if ((MUFMin == 0) && (MUFSec == 0)) {
            eventsNeeded++;
            MUFNeeded = true;
        }
        if (ACL == 0) {
            eventsNeeded++;
            ACLNeeded = true;
        }
        if ((MTCMin == 0) && (MTCSec == 0)) {
            eventsNeeded++;
            MTCNeeded = true;
        }

        if (eventsNeeded == 0)
        {
            resultsString.append("All scores entered. \n");
            resultsString.append(getResults(ageString));
            return resultsString;

        }

        if (remainingScore > 0)
            remainingScorePerEvent = remainingScore / eventsNeeded + ((remainingScore % eventsNeeded == 0) ? 0 : 1);
        Log.i("Remaining SPE: ", Integer.toString(remainingScorePerEvent));
        if (remainingScorePerEvent > 100)
        {
            resultsString.append("You cannot obtain that score! You need " + Integer.toString(remainingScorePerEvent) + " more points per event to achieve the desired score.");
            return resultsString;
        }

        resultsString.append("RESULTS" + "\n\nAge Group: " + ageString + "\nGender: " + genderString() + "\n");

        resultsString.append("\nDesired Class: " + Integer.toString(desiredClass + 1) + //Returns the desired class 1, 2, or 3
                "\nScore required: " + Integer.toString(desiredScore) + "\n");  //Returns the score required of that class

        //remainingScorePerEvent tells me how much is needed to get minimum per event
        //remainingScore has the remaining score needed to achieve the desired score
        //bool ***Needed tells which events are needed to calculate scores and times/reps for

        if (MTCNeeded) {
            int[] MTCResults = getMTCWhatIf(remainingScorePerEvent); // score, minutes, seconds
            remainingScore -= MTCResults[0];
            eventsNeeded --;
            if (eventsNeeded>0)
                remainingScorePerEvent = remainingScore / eventsNeeded + ((remainingScore % eventsNeeded == 0) ? 0 : 1);
            if (remainingScorePerEvent <40)
                remainingScorePerEvent = 40;
            startLength = resultsString.length();
            resultsString.append("\nMTC Run Faster Than: " + Integer.toString(MTCResults[1]) +
                    ":" + String.format("%02d", MTCResults[2]) +
                    " Score: " + MTCResults[0]);
            resultsString.setSpan(new StyleSpan(android.graphics.Typeface.BOLD), startLength, resultsString.length(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
            TotalScore += MTCResults[0];
        }
        else
            resultsString.append("\nMTC Run Time: " + MTCMin + ":" + String.format("%02d", MTCSec) + " Score: " + MTCScore);


        if (ACLNeeded) {
            int[] ACLResults = getACLWhatIf(remainingScorePerEvent);
            remainingScore -= ACLResults[0];
            eventsNeeded--;
            if(eventsNeeded>0)
                remainingScorePerEvent = remainingScore / eventsNeeded + ((remainingScore % eventsNeeded == 0) ? 0 : 1);
            if (remainingScorePerEvent <40)
                remainingScorePerEvent = 40;
            startLength = resultsString.length();
            resultsString.append("\nAmmo Can Lifts Required: ")
                    .append(Integer.toString(ACLResults[1]))
                    .append(" Score: ")
                    .append(Integer.toString(ACLResults[0]));
            resultsString.setSpan(new StyleSpan(android.graphics.Typeface.BOLD), startLength, resultsString.length(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
            TotalScore += ACLResults[0];
        }
        else
            resultsString.append("\nAmmo Can Lifts: " + ACL + " Score: " + ACLScore);

        if (MUFNeeded) {
            int[] MUFResults = getMUFWhatIf(remainingScorePerEvent);
            startLength = resultsString.length();
            resultsString.append("\nMANUF Run Faster Than: " + Integer.toString(MUFResults[1]) +
                    ":" + String.format("%02d", MUFResults[2]) +
                    " Score: " + MUFResults[0]);
            resultsString.setSpan(new StyleSpan(android.graphics.Typeface.BOLD), startLength, resultsString.length(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
            TotalScore += MUFResults[0];
        }
        else
            resultsString.append("\nMANUF Run Time: " + MUFMin + ":" + String.format("%02d", MUFSec) + "Score: " + MUFScore);
        resultsString.append("\n\nTotal Score: " + Integer.toString(TotalScore));
        resultsString.append("\nClass Obtained: " + Integer.toString(getClassObtained(TotalScore)));
        return resultsString;
    }
    private int getClassObtained(int score) {
        if (score >= 235)
            return 1;
        else if (score >= 200)
            return 2;
        else return 3;

    }
    private int[] getMTCWhatIf(int scoreNeeded)
    {
        int[] MTCResults;
        int[][] MTCTable;

        if(Gender) MTCTable = new int [][] {
                {100,100,100,100,100,100,100,100}, //2:38
                {100, 99,100,100,100,100,100,100},
                {100, 98, 99,100,100,100,100,100},
                { 99, 98, 99,100,100,100,100,100},
                { 98, 96, 97,100,100,100,100,100}, //2:42
                { 97, 96, 97, 99,100,100,100,100},
                { 96, 95, 96, 98,100,100,100,100},
                { 95, 94, 95, 97,100,100,100,100},
                { 94, 93, 94, 97, 99,100,100,100},
                { 94, 92, 93, 96, 98,100,100,100},
                { 93, 91, 92, 95, 98,100,100,100},
                { 92, 90, 91, 94, 97,100,100,100},
                { 91, 89, 90, 93, 96,100,100,100},
                { 90, 88, 90, 92, 95,100,100,100},
                { 89, 87, 89, 91, 94,100,100,100},
                { 88, 87, 88, 90, 93, 99,100,100},
                { 87, 86, 87, 90, 93, 98,100,100},
                { 86, 85, 86, 89, 92, 98,100,100},
                { 85, 84, 85, 88, 91, 97,100,100},
                { 84, 83, 84, 87, 90, 96,100,100},
                { 83, 82, 83, 86, 89, 95,100,100},
                { 82, 81, 83, 85, 88, 95,100,100},
                { 82, 80, 82, 84, 88, 94,100,100},
                { 81, 79, 81, 83, 87, 93,100,100},
                { 80, 79, 80, 83, 86, 92, 99,100},
                { 79, 78, 79, 82, 85, 92, 99,100},
                { 78, 77, 78, 81, 84, 91, 98,100},
                { 77, 76, 77, 80, 84, 90, 97,100},
                { 76, 75, 77, 79, 83, 89, 97, 99},
                { 75, 74, 76, 78, 82, 89, 96, 99},
                { 75, 74, 76, 78, 82, 89, 96, 99},
                { 73, 72, 74, 77, 80, 87, 94, 98},
                { 72, 71, 73, 76, 79, 86, 94, 97},
                { 71, 70, 72, 75, 79, 86, 93, 97},
                { 70, 70, 71, 74, 78, 85, 92, 96},
                { 70, 69, 70, 73, 77, 84, 92, 96},
                { 69, 68, 70, 72, 76, 83, 91, 95},
                { 68, 67, 69, 71, 75, 83, 90, 95},
                { 67, 66, 68, 70, 75, 82, 90, 94},
                { 66, 65, 67, 70, 74, 81, 89, 94},
                { 65, 64, 66, 69, 73, 80, 88, 93},
                { 64, 63, 65, 68, 72, 79, 88, 93},
                { 63, 62, 64, 67, 71, 79, 87, 92},
                { 62, 61, 63, 66, 70, 78, 86, 92},
                { 61, 61, 63, 65, 70, 77, 86, 91},
                { 60, 60, 62, 64, 69, 76, 85, 91},//3:23 top of second page
                { 59, 59, 61, 63, 68, 76, 84, 90},
                { 58, 58, 60, 63, 67, 75, 83, 90},
                { 58, 57, 59, 62, 66, 74, 83, 89},
                { 57, 56, 58, 61, 65, 73, 82, 89},
                { 56, 55, 57, 60, 65, 73, 81, 88},
                { 55, 54, 57, 59, 64, 72, 81, 88},
                { 54, 53, 56, 58, 63, 71, 80, 87},
                { 53, 53, 55, 57, 62, 70, 79, 87},
                { 52, 52, 54, 57, 61, 70, 79, 86},
                { 51, 51, 53, 56, 61, 69, 78, 86},
                { 50, 50, 52, 55, 60, 68, 77, 85},
                { 49, 49, 51, 54, 59, 67, 77, 85},
                { 48, 48, 50, 53, 58, 67, 76, 85},
                { 47, 47, 50, 52, 57, 66, 75, 84},
                { 46, 46, 49, 51, 56, 65, 74, 84},
                { 46, 45, 48, 50, 56, 64, 74, 83},
                { 45, 44, 47, 50, 55, 64, 73, 83},
                { 44, 44, 46, 49, 54, 63, 72, 82},
                { 43, 43, 45, 48, 53, 62, 72, 82},
                { 42, 42, 44, 47, 52, 61, 71, 81},
                { 41, 41, 43, 46, 52, 61, 70, 81},
                { 40, 40, 43, 45, 51, 60, 70, 80},//CUTOFF FOR FIRST 2 AGE GROUPS
                {  0,  0, 42, 44, 50, 59, 69, 80},
                {  0,  0, 41, 43, 49, 58, 68, 79},
                {  0,  0, 40, 43, 48, 57, 68, 79},
                {  0,  0,  0, 42, 47, 57, 67, 78},
                {  0,  0,  0, 41, 47, 56, 66, 78},
                {  0,  0,  0, 40, 46, 55, 66, 77},
                {  0,  0,  0,  0, 45, 54, 65, 77},
                {  0,  0,  0,  0, 44, 54, 64, 76},
                {  0,  0,  0,  0, 43, 53, 63, 76},
                {  0,  0,  0,  0, 42, 52, 63, 75},
                {  0,  0,  0,  0, 42, 51, 62, 75},
                {  0,  0,  0,  0, 41, 51, 61, 74},
                {  0,  0,  0,  0, 40, 50, 61, 74},//3:58
                {  0,  0,  0,  0,  0, 49, 60, 73},
                {  0,  0,  0,  0,  0, 48, 59, 73},
                {  0,  0,  0,  0,  0, 48, 59, 72},
                {  0,  0,  0,  0,  0, 47, 58, 72},
                {  0,  0,  0,  0,  0, 46, 57, 71},
                {  0,  0,  0,  0,  0, 45, 57, 71},
                {  0,  0,  0,  0,  0, 45, 56, 70},
                {  0,  0,  0,  0,  0, 43, 54, 70},
                {  0,  0,  0,  0,  0, 42, 54, 69},
                {  0,  0,  0,  0,  0, 42, 53, 69},
                {  0,  0,  0,  0,  0, 41, 52, 68},
                {  0,  0,  0,  0,  0, 40, 52, 68},//4:11
                {  0,  0,  0,  0,  0,  0, 51, 67},
                {  0,  0,  0,  0,  0,  0, 50, 67},
                {  0,  0,  0,  0,  0,  0, 50, 66},
                {  0,  0,  0,  0,  0,  0, 49, 66},
                {  0,  0,  0,  0,  0,  0, 48, 65},
                {  0,  0,  0,  0,  0,  0, 48, 65},
                {  0,  0,  0,  0,  0,  0, 47, 64},
                {  0,  0,  0,  0,  0,  0, 46, 64},
                {  0,  0,  0,  0,  0,  0, 46, 63},
                {  0,  0,  0,  0,  0,  0, 45, 63},
                {  0,  0,  0,  0,  0,  0, 44, 62},
                {  0,  0,  0,  0,  0,  0, 43, 62},
                {  0,  0,  0,  0,  0,  0, 43, 61},
                {  0,  0,  0,  0,  0,  0, 42, 61},
                {  0,  0,  0,  0,  0,  0, 41, 60},
                {  0,  0,  0,  0,  0,  0, 41, 60},
                {  0,  0,  0,  0,  0,  0, 40, 59},
                {  0,  0,  0,  0,  0,  0,  0, 59},
                {  0,  0,  0,  0,  0,  0,  0, 58},
                {  0,  0,  0,  0,  0,  0,  0, 58},
                {  0,  0,  0,  0,  0,  0,  0, 57},
                {  0,  0,  0,  0,  0,  0,  0, 57},
                {  0,  0,  0,  0,  0,  0,  0, 56},
                {  0,  0,  0,  0,  0,  0,  0, 56},
                {  0,  0,  0,  0,  0,  0,  0, 55},
                {  0,  0,  0,  0,  0,  0,  0, 55},
                {  0,  0,  0,  0,  0,  0,  0, 55},
                {  0,  0,  0,  0,  0,  0,  0, 54},
                {  0,  0,  0,  0,  0,  0,  0, 54},
                {  0,  0,  0,  0,  0,  0,  0, 53},
                {  0,  0,  0,  0,  0,  0,  0, 53},
                {  0,  0,  0,  0,  0,  0,  0, 52},
                {  0,  0,  0,  0,  0,  0,  0, 52},
                {  0,  0,  0,  0,  0,  0,  0, 51},
                {  0,  0,  0,  0,  0,  0,  0, 51},
                {  0,  0,  0,  0,  0,  0,  0, 50},
                {  0,  0,  0,  0,  0,  0,  0, 50},
                {  0,  0,  0,  0,  0,  0,  0, 49},
                {  0,  0,  0,  0,  0,  0,  0, 49},
                {  0,  0,  0,  0,  0,  0,  0, 48},
                {  0,  0,  0,  0,  0,  0,  0, 48},
                {  0,  0,  0,  0,  0,  0,  0, 47},
                {  0,  0,  0,  0,  0,  0,  0, 47},
                {  0,  0,  0,  0,  0,  0,  0, 46},
                {  0,  0,  0,  0,  0,  0,  0, 46},
                {  0,  0,  0,  0,  0,  0,  0, 45},
                {  0,  0,  0,  0,  0,  0,  0, 45},
                {  0,  0,  0,  0,  0,  0,  0, 44},
                {  0,  0,  0,  0,  0,  0,  0, 44},
                {  0,  0,  0,  0,  0,  0,  0, 43},
                {  0,  0,  0,  0,  0,  0,  0, 43},
                {  0,  0,  0,  0,  0,  0,  0, 42},
                {  0,  0,  0,  0,  0,  0,  0, 42},
                {  0,  0,  0,  0,  0,  0,  0, 41},
                {  0,  0,  0,  0,  0,  0,  0, 41},
                {  0,  0,  0,  0,  0,  0,  0, 40},
                {  0,  0,  0,  0,  0,  0,  0,  0}
        };
        else MTCTable = new int[][] {
                {100,100,100,100,100,100,100,100},
                {100,100, 99,100,100,100,100,100},
                {100,100, 99,100,100,100,100,100},
                {100,100, 98, 99,100,100,100,100},
                {100, 99, 97, 99,100,100,100,100},
                {100, 99, 97, 98,100,100,100,100},
                {100, 98, 96, 97,100,100,100,100},
                {100, 97, 96, 97,100,100,100,100},
                {100, 97, 95, 96,100,100,100,100},
                {100, 97, 94, 96, 99,100,100,100},
                { 99, 95, 94, 95, 99,100,100,100},
                { 98, 95, 93, 94, 98,100,100,100},
                { 98, 94, 92, 94, 98,100,100,100},
                { 97, 93, 92, 93, 97,100,100,100},
                { 96, 93, 91, 92, 96,100,100,100},//3:24
                { 95, 92, 91, 92, 96,100,100,100},
                { 95, 91, 90, 91, 95, 99,100,100},
                { 94, 90, 89, 90, 94, 99,100,100},
                { 93, 90, 89, 90, 94, 98,100,100},
                { 92, 89, 88, 89, 93, 97,100,100},
                { 91, 88, 87, 89, 93, 97,100,100},
                { 91, 88, 87, 88, 92, 96,100,100},
                { 90, 87, 86, 87, 91, 95,100,100},
                { 89, 86, 85, 87, 91, 95,100,100},
                { 88, 86, 85, 86, 90, 94,100,100},
                { 88, 85, 84, 85, 89, 94,100,100},
                { 87, 84, 84, 85, 89, 93,100,100},
                { 86, 84, 83, 84, 88, 92,100,100},
                { 85, 83, 82, 83, 88, 92,100,100},//3:38
                { 84, 82, 82, 83, 87, 91,100,100},
                { 84, 82, 81, 82, 86, 90, 99,100},
                { 83, 81, 80, 81, 86, 90, 99,100},
                { 82, 80, 80, 81, 85, 89, 98,100},
                { 81, 80, 79, 80, 85, 88, 98,100},
                { 81, 79, 79, 80, 84, 88, 97,100},
                { 80, 78, 78, 79, 83, 87, 97,100},
                { 79, 78, 77, 78, 83, 86, 96,100},
                { 78, 77, 77, 78, 82, 86, 96,100},
                { 77, 76, 76, 77, 81, 85, 95,100},
                { 77, 75, 75, 76, 81, 85, 94,100},
                { 76, 75, 75, 76, 80, 84, 94,100},
                { 75, 74, 74, 75, 80, 83, 93,100},
                { 74, 73, 73, 74, 79, 83, 93,100},
                { 74, 73, 73, 74, 78, 82, 92,100},
                { 73, 72, 72, 73, 78, 81, 92,100},//3:54
                { 72, 71, 72, 73, 77, 81, 91,100},
                { 71, 71, 71, 72, 76, 80, 90, 99},
                { 70, 70, 70, 71, 76, 79, 90, 99},
                { 70, 69, 70, 71, 75, 79, 89, 98},
                { 69, 69, 69, 70, 75, 78, 89, 98},
                { 68, 68, 68, 69, 74, 77, 88, 97},
                { 67, 67, 68, 69, 73, 77, 88, 97},
                { 66, 67, 67, 68, 73, 76, 87, 96},
                { 66, 66, 67, 67, 72, 75, 87, 96},
                { 65, 65, 66, 67, 72, 75, 86, 95},
                { 64, 65, 65, 66, 71, 74, 85, 95},
                { 63, 64, 65, 66, 70, 74, 85, 94},
                { 63, 63, 64, 65, 70, 73, 84, 94},
                { 62, 63, 63, 64, 69, 72, 84, 93},
                { 61, 62, 63, 64, 68, 72, 83, 93},
                { 60, 61, 62, 63, 68, 71, 83, 92},
                { 59, 60, 61, 62, 67, 70, 82, 92},
                { 59, 60, 61, 62, 67, 70, 81, 91},
                { 58, 59, 60, 61, 66, 69, 81, 91},
                { 57, 58, 60, 60, 65, 68, 80, 90},
                { 56, 58, 59, 60, 65, 68, 80, 90},
                { 56, 57, 58, 59, 64, 67, 79, 89},
                { 55, 56, 58, 59, 64, 66, 79, 89},
                { 54, 56, 57, 58, 63, 66, 78, 88},
                { 53, 55, 56, 57, 62, 65, 78, 88},
                { 52, 54, 56, 57, 62, 65, 77, 87},
                { 52, 54, 55, 56, 61, 64, 76, 87},
                { 51, 53, 55, 55, 60, 63, 76, 86},
                { 50, 52, 54, 55, 60, 63, 75, 86},
                { 49, 52, 53, 54, 59, 62, 75, 85},
                { 49, 51, 53, 53, 59, 61, 74, 85},
                { 48, 50, 52, 53, 58, 61, 74, 84},
                { 47, 50, 51, 52, 57, 60, 73, 84},
                { 46, 49, 51, 51, 57, 59, 73, 83},
                { 45, 48, 50, 51, 56, 59, 72, 83},
                { 45, 48, 49, 50, 55, 58, 71, 82},
                { 44, 47, 49, 50, 55, 57, 71, 82},
                { 43, 46, 48, 49, 54, 57, 70, 81},
                { 42, 45, 48, 48, 54, 56, 70, 81},
                { 42, 45, 47, 48, 53, 55, 69, 80},
                { 41, 44, 46, 47, 52, 55, 69, 79},
                { 40, 43, 46, 46, 52, 54, 68, 79},//4:36
                {  0, 43, 45, 46, 51, 54, 67, 78},
                {  0, 42, 44, 45, 51, 53, 67, 78},
                {  0, 41, 44, 44, 50, 52, 66, 77},
                {  0, 41, 43, 44, 49, 52, 66, 77},
                {  0, 40, 43, 43, 49, 51, 65, 76},
                {  0,  0, 42, 43, 48, 50, 65, 76},
                {  0,  0, 41, 42, 47, 50, 64, 75},
                {  0,  0, 41, 41, 47, 49, 64, 75},//4:44
                {  0,  0, 40, 41, 46, 48, 63, 74},
                {  0,  0,  0, 40, 46, 48, 62, 74},
                {  0,  0,  0,  0, 45, 47, 62, 73},
                {  0,  0,  0,  0, 44, 46, 61, 73},
                {  0,  0,  0,  0, 44, 46, 61, 72},
                {  0,  0,  0,  0, 43, 45, 60, 72},
                {  0,  0,  0,  0, 42, 45, 60, 71},
                {  0,  0,  0,  0, 42, 44, 59, 71},
                {  0,  0,  0,  0, 41, 43, 59, 70},
                {  0,  0,  0,  0, 41, 43, 58, 70},
                {  0,  0,  0,  0, 40, 42, 57, 69},//4:55
                {  0,  0,  0,  0,  0, 41, 57, 69},
                {  0,  0,  0,  0,  0, 41, 56, 68},
                {  0,  0,  0,  0,  0, 40, 56, 68},
                {  0,  0,  0,  0,  0,  0, 55, 67},
                {  0,  0,  0,  0,  0,  0, 55, 67},
                {  0,  0,  0,  0,  0,  0, 54, 66},
                {  0,  0,  0,  0,  0,  0, 53, 66},
                {  0,  0,  0,  0,  0,  0, 53, 65},
                {  0,  0,  0,  0,  0,  0, 52, 65},
                {  0,  0,  0,  0,  0,  0, 52, 64},
                {  0,  0,  0,  0,  0,  0, 51, 64},
                {  0,  0,  0,  0,  0,  0, 51, 63},
                {  0,  0,  0,  0,  0,  0, 50, 63},
                {  0,  0,  0,  0,  0,  0, 50, 62},
                {  0,  0,  0,  0,  0,  0, 49, 62},
                {  0,  0,  0,  0,  0,  0, 48, 61},
                {  0,  0,  0,  0,  0,  0, 48, 61},
                {  0,  0,  0,  0,  0,  0, 47, 60},
                {  0,  0,  0,  0,  0,  0, 47, 59},
                {  0,  0,  0,  0,  0,  0, 46, 59},
                {  0,  0,  0,  0,  0,  0, 46, 58},
                {  0,  0,  0,  0,  0,  0, 45, 58},
                {  0,  0,  0,  0,  0,  0, 44, 57},
                {  0,  0,  0,  0,  0,  0, 44, 57},
                {  0,  0,  0,  0,  0,  0, 43, 56},
                {  0,  0,  0,  0,  0,  0, 43, 56},
                {  0,  0,  0,  0,  0,  0, 42, 55},
                {  0,  0,  0,  0,  0,  0, 42, 55},//5:23
                {  0,  0,  0,  0,  0,  0, 41, 54},
                {  0,  0,  0,  0,  0,  0, 41, 54},
                {  0,  0,  0,  0,  0,  0, 40, 53},
                {  0,  0,  0,  0,  0,  0,  0, 53},
                {  0,  0,  0,  0,  0,  0,  0, 52},
                {  0,  0,  0,  0,  0,  0,  0, 52},
                {  0,  0,  0,  0,  0,  0,  0, 51},
                {  0,  0,  0,  0,  0,  0,  0, 51},
                {  0,  0,  0,  0,  0,  0,  0, 50},
                {  0,  0,  0,  0,  0,  0,  0, 50},
                {  0,  0,  0,  0,  0,  0,  0, 49},
                {  0,  0,  0,  0,  0,  0,  0, 49},
                {  0,  0,  0,  0,  0,  0,  0, 48},
                {  0,  0,  0,  0,  0,  0,  0, 48},
                {  0,  0,  0,  0,  0,  0,  0, 47},
                {  0,  0,  0,  0,  0,  0,  0, 47},
                {  0,  0,  0,  0,  0,  0,  0, 46},
                {  0,  0,  0,  0,  0,  0,  0, 46},
                {  0,  0,  0,  0,  0,  0,  0, 45},
                {  0,  0,  0,  0,  0,  0,  0, 45},
                {  0,  0,  0,  0,  0,  0,  0, 44},
                {  0,  0,  0,  0,  0,  0,  0, 44},
                {  0,  0,  0,  0,  0,  0,  0, 43},
                {  0,  0,  0,  0,  0,  0,  0, 43},
                {  0,  0,  0,  0,  0,  0,  0, 42},
                {  0,  0,  0,  0,  0,  0,  0, 42},
                {  0,  0,  0,  0,  0,  0,  0, 41},
                {  0,  0,  0,  0,  0,  0,  0, 41},
                {  0,  0,  0,  0,  0,  0,  0, 40},
                {  0,  0,  0,  0,  0,  0,  0,  0}
        };
        int i = 0;
        Log.i("MTC", " pre while loop");
        while (scoreNeeded<=MTCTable[i][ageGroup])
            i++;
        Log.i("MTC scoreNeeded: ", Integer.toString(scoreNeeded));
        Log.i("MTC Index: ", Integer.toString(i));
        Log.i("MTC Score: ", Integer.toString(MTCTable[i][ageGroup]));
        i--;
        Log.i("MTC Index: ", Integer.toString(i));
        int totalSeconds = 0;
        if(!Elevation)
            totalSeconds +=6;
        if(Gender) // male is 2:38
            totalSeconds += 158;
        else // female is 3:10
            totalSeconds += 190;

        totalSeconds += i;

        MTCResults = new int[] {MTCTable[i][ageGroup], totalSeconds/60, totalSeconds%60};

        return MTCResults;
    }

    private int[] getACLWhatIf(int scoreNeeded) {
        int[] ACLResults;
        int[][] ACLTable;

        if(Gender) ACLTable = new int[][] {
                {100,100,100,100,100,100,100,100},
                {100,100,100, 99,100,100,100,100},
                {100,100,100, 98,100,100,100,100},
                {100,100,100, 97,100,100,100,100},
                {100,100,100, 95,100,100,100,100},
                {100,100, 99, 94,100,100,100,100},
                {100, 99, 98, 93,100,100,100,100},
                {100, 98, 96, 92,100,100,100,100},
                {100, 96, 95, 91,100,100,100,100},
                {100, 95, 94, 90,100,100,100,100},
                {100, 94, 93, 89,100,100,100,100},
                {100, 93, 91, 88,100,100,100,100},
                {100, 91, 90, 86, 97,100,100,100},
                {100, 90, 89, 85, 96,100,100,100},
                {100, 89, 88, 84, 94,100,100,100},
                { 99, 88, 87, 83, 93, 99,100,100},
                { 97, 86, 85, 82, 92, 97,100,100},
                { 96, 85, 84, 81, 90, 96,100,100},
                { 95, 84, 83, 80, 89, 94,100,100},
                { 93, 83, 82, 78, 87, 93,100,100},
                { 92, 81, 80, 77, 86, 91,100,100},
                { 90, 80, 79, 76, 85, 90, 98,100},
                { 89, 79, 78, 75, 83, 88, 97,100},
                { 88, 78, 77, 74, 82, 87, 95,100},
                { 86, 76, 76, 73, 80, 85, 93,100},//95
                { 85, 75, 74, 72, 79, 84, 91,100},
                { 84, 74, 73, 71, 78, 82, 90, 99},
                { 82, 73, 72, 69, 76, 81, 88, 98},
                { 81, 71, 71, 68, 75, 79, 86, 98},
                { 80, 70, 69, 67, 73, 78, 85, 97},
                { 78, 69, 68, 66, 72, 76, 83, 96},
                { 77, 68, 67, 65, 71, 75, 81, 95},
                { 75, 66, 66, 64, 69, 73, 79, 95},
                { 74, 65, 64, 63, 68, 72, 78, 94},
                { 73, 64, 63, 62, 67, 70, 76, 93},
                { 71, 63, 62, 60, 65, 69, 74, 92},
                { 70, 61, 61, 59, 64, 67, 73, 92},
                { 69, 60, 60, 58, 62, 66, 71, 91},
                { 67, 59, 58, 57, 61, 64, 69, 90},
                { 66, 58, 57, 56, 60, 63, 67, 89},
                { 65, 56, 56, 55, 58, 61, 66, 89},
                { 63, 55, 55, 54, 57, 60, 64, 88},
                { 62, 54, 53, 52, 55, 58, 62, 87},
                { 60, 53, 52, 51, 54, 57, 61, 86},//77
                { 59, 51, 51, 50, 53, 55, 59, 86},
                { 58, 50, 50, 49, 51, 54, 57, 85},
                { 56, 49, 49, 48, 50, 52, 55, 84},
                { 55, 48, 47, 47, 48, 51, 54, 83},
                { 54, 46, 46, 46, 47, 49, 52, 83},
                { 52, 45, 45, 45, 46, 48, 50, 82},
                { 51, 44, 44, 43, 44, 46, 49, 81},
                { 50, 43, 42, 42, 43, 45, 47, 80},
                { 48, 41, 41, 41, 41, 43, 45, 79},
                { 47, 40, 40, 40, 40, 42, 43, 79},
                { 45,  0,  0,  0,  0, 40, 42, 78},
                { 44,  0,  0,  0,  0,  0, 40, 77},
                { 43,  0,  0,  0,  0,  0,  0, 76},
                { 41,  0,  0,  0,  0,  0,  0, 76},
                { 40,  0,  0,  0,  0,  0,  0, 75},
                {  0,  0,  0,  0,  0,  0,  0, 74},
                {  0,  0,  0,  0,  0,  0,  0, 73},
                {  0,  0,  0,  0,  0,  0,  0, 73},
                {  0,  0,  0,  0,  0,  0,  0, 72},
                {  0,  0,  0,  0,  0,  0,  0, 71},
                {  0,  0,  0,  0,  0,  0,  0, 70},
                {  0,  0,  0,  0,  0,  0,  0, 70},
                {  0,  0,  0,  0,  0,  0,  0, 69},
                {  0,  0,  0,  0,  0,  0,  0, 68},
                {  0,  0,  0,  0,  0,  0,  0, 67},
                {  0,  0,  0,  0,  0,  0,  0, 67},
                {  0,  0,  0,  0,  0,  0,  0, 66},
                {  0,  0,  0,  0,  0,  0,  0, 65},
                {  0,  0,  0,  0,  0,  0,  0, 64},
                {  0,  0,  0,  0,  0,  0,  0, 64},
                {  0,  0,  0,  0,  0,  0,  0, 63},
                {  0,  0,  0,  0,  0,  0,  0, 62},
                {  0,  0,  0,  0,  0,  0,  0, 61},
                {  0,  0,  0,  0,  0,  0,  0, 61},
                {  0,  0,  0,  0,  0,  0,  0, 60},
                {  0,  0,  0,  0,  0,  0,  0, 59},
                {  0,  0,  0,  0,  0,  0,  0, 58},
                {  0,  0,  0,  0,  0,  0,  0, 57},
                {  0,  0,  0,  0,  0,  0,  0, 57},
                {  0,  0,  0,  0,  0,  0,  0, 56},
                {  0,  0,  0,  0,  0,  0,  0, 55},
                {  0,  0,  0,  0,  0,  0,  0, 54},
                {  0,  0,  0,  0,  0,  0,  0, 54},
                {  0,  0,  0,  0,  0,  0,  0, 53},
                {  0,  0,  0,  0,  0,  0,  0, 52},
                {  0,  0,  0,  0,  0,  0,  0, 51},
                {  0,  0,  0,  0,  0,  0,  0, 51},
                {  0,  0,  0,  0,  0,  0,  0, 50},
                {  0,  0,  0,  0,  0,  0,  0, 49},
                {  0,  0,  0,  0,  0,  0,  0, 48},
                {  0,  0,  0,  0,  0,  0,  0, 48},
                {  0,  0,  0,  0,  0,  0,  0, 47},
                {  0,  0,  0,  0,  0,  0,  0, 46},
                {  0,  0,  0,  0,  0,  0,  0, 45},
                {  0,  0,  0,  0,  0,  0,  0, 45},
                {  0,  0,  0,  0,  0,  0,  0, 44},
                {  0,  0,  0,  0,  0,  0,  0, 43},
                {  0,  0,  0,  0,  0,  0,  0, 42},
                {  0,  0,  0,  0,  0,  0,  0, 42},
                {  0,  0,  0,  0,  0,  0,  0, 41},
                {  0,  0,  0,  0,  0,  0,  0, 40},
                {  0,  0,  0,  0,  0,  0,  0,  0}
        };
        else
            ACLTable = new int[][] {
                    {100,100,100,100,100,100,100,100},
                    {100,100,100, 99,100,100,100,100},
                    {100, 99, 97,100,100,100,100,100},
                    {100, 97, 96,100,100,100,100,100},
                    {100, 96, 95, 99,100,100,100,100},
                    {100, 95, 93, 97,100,100,100,100},
                    {100, 93, 92, 96, 99,100,100,100},
                    {100, 92, 91, 94, 97,100,100,100},
                    {100, 90, 89, 93, 96,100,100,100},//67
                    {100, 89, 88, 91, 94,100,100,100},
                    { 98, 88, 87, 90, 93,100,100,100},
                    { 97, 86, 85, 89, 91,100,100,100},
                    { 95, 85, 84, 87, 90,100,100,100},
                    { 93, 84, 83, 86, 88,100,100,100},
                    { 92, 82, 81, 84, 87, 98,100,100},
                    { 90, 81, 80, 83, 85, 96,100,100},
                    { 88, 80, 79, 81, 84, 95,100,100},
                    { 87, 78, 77, 80, 82, 93,100,100},
                    { 85, 77, 76, 79, 81, 91,100,100},
                    { 83, 75, 75, 77, 79, 89,100,100},
                    { 82, 74, 73, 76, 78, 88,100,100},
                    { 80, 73, 72, 74, 76, 86,100,100},
                    { 78, 71, 71, 73, 75, 84,100,100},
                    { 77, 70, 69, 71, 73, 82, 98,100},
                    { 75, 69, 68, 70, 72, 81, 96,100},
                    { 73, 67, 67, 69, 70, 79, 93,100},
                    { 72, 66, 65, 67, 69, 77, 91,100},
                    { 70, 65, 64, 66, 67, 75, 89,100},
                    { 68, 63, 63, 64, 66, 74, 87,100},
                    { 67, 62, 61, 63, 64, 72, 84,100},
                    { 65, 60, 60, 61, 63, 70, 82,100},
                    { 63, 59, 59, 60, 61, 68, 80,100},
                    { 62, 58, 57, 59, 60, 66, 78, 98},
                    { 60, 56, 56, 57, 58, 65, 76, 97},
                    { 58, 55, 55, 56, 57, 63, 73, 95},
                    { 57, 54, 53, 54, 55, 61, 71, 94},
                    { 55, 52, 52, 53, 54, 59, 69, 92},
                    { 53, 51, 51, 51, 52, 58, 67, 91},
                    { 52, 50, 49, 50, 51, 56, 64, 89},
                    { 50, 48, 48, 49, 49, 54, 62, 87},
                    { 48, 47, 47, 47, 48, 52, 60, 86},
                    { 47, 45, 45, 46, 46, 51, 58, 84},
                    { 45, 44, 44, 44, 45, 49, 56, 83},
                    { 43, 43, 43, 43, 43, 47, 53, 81},
                    { 42, 41, 41, 41, 42, 45, 51, 79},
                    { 40, 40, 40, 40, 40, 44, 49, 78},
                    {  0,  0,  0,  0,  0, 42, 47, 76},
                    {  0,  0,  0,  0,  0, 40, 44, 75},
                    {  0,  0,  0,  0,  0,  0, 42, 73},
                    {  0,  0,  0,  0,  0,  0, 40, 72},
                    {  0,  0,  0,  0,  0,  0,  0, 70},
                    {  0,  0,  0,  0,  0,  0,  0, 68},
                    {  0,  0,  0,  0,  0,  0,  0, 67},
                    {  0,  0,  0,  0,  0,  0,  0, 65},
                    {  0,  0,  0,  0,  0,  0,  0, 64},
                    {  0,  0,  0,  0,  0,  0,  0, 62},
                    {  0,  0,  0,  0,  0,  0,  0, 61},
                    {  0,  0,  0,  0,  0,  0,  0, 59},
                    {  0,  0,  0,  0,  0,  0,  0, 57},
                    {  0,  0,  0,  0,  0,  0,  0, 56},
                    {  0,  0,  0,  0,  0,  0,  0, 54},
                    {  0,  0,  0,  0,  0,  0,  0, 53},
                    {  0,  0,  0,  0,  0,  0,  0, 51},
                    {  0,  0,  0,  0,  0,  0,  0, 49},
                    {  0,  0,  0,  0,  0,  0,  0, 48},
                    {  0,  0,  0,  0,  0,  0,  0, 46},
                    {  0,  0,  0,  0,  0,  0,  0, 45},
                    {  0,  0,  0,  0,  0,  0,  0, 43},
                    {  0,  0,  0,  0,  0,  0,  0, 42},
                    {  0,  0,  0,  0,  0,  0,  0, 40},
                    {  0,  0,  0,  0,  0,  0,  0,  0}
            };
        int i =0 ;
        while (scoreNeeded <= ACLTable[i][ageGroup])
            i++;
        i--;
        int reps;
        if (Gender)
            reps = 120-i;
        else
            reps = 75-i;
        ACLResults = new int [] {ACLTable[i][ageGroup],reps};
        return ACLResults;

    }
    private int[] getMUFWhatIf(int scoreNeeded) {
        int[] MUFResults; //returns Score, Minutes, Seconds
        int[][] MUFTable;

        if (Gender) MUFTable = new int[][] {
                {100, 100, 100, 100, 100, 100, 100, 100},
                {100, 99, 100, 100, 100, 100, 100, 100},
                {100, 98, 99, 100, 100, 100, 100, 100},
                {100, 98, 98, 100, 100, 100, 100, 100},
                {99, 97, 98, 100, 100, 100, 100, 100},
                {98, 96, 97, 100, 100, 100, 100, 100},
                {97, 95, 96, 100, 100, 100, 100, 100},
                {97, 94, 95, 99, 100, 100, 100, 100},
                {96, 94, 95, 99, 100, 100, 100, 100},
                {95, 93, 94, 98, 100, 100, 100, 100},
                {94, 92, 93, 97, 100, 100, 100, 100},
                {93, 91, 92, 96, 100, 100, 100, 100},
                {92, 90, 91, 96, 100, 100, 100, 100},
                {91, 89, 91, 95, 99, 100, 100, 100},
                {91, 89, 90, 94, 99, 100, 100, 100},
                {90, 88, 89, 93, 98, 100, 100, 100},
                {89, 87, 88, 93, 97, 100, 100, 100},
                {88, 86, 88, 92, 97, 100, 100, 100},
                {87, 85, 87, 91, 96, 100, 100, 100},
                {86, 85, 86, 90, 95, 100, 100, 100},
                {85, 84, 85, 90, 94, 99, 100, 100},
                {85, 83, 84, 89, 94, 99, 100, 100},
                {84, 82, 84, 88, 93, 98, 100, 100},
                {83, 81, 83, 87, 92, 98, 100, 100},
                {82, 81, 82, 87, 92, 97, 100, 100},
                {81, 80, 81, 86, 91, 96, 100, 100},
                {80, 79, 81, 85, 90, 96, 100, 100},
                {79, 78, 80, 84, 90, 95, 100, 100},
                {79, 77, 79, 84, 89, 94, 100, 100},
                {78, 76, 78, 83, 88, 94, 100, 100},
                {77, 76, 77, 82, 87, 93, 100, 100},
                {76, 75, 77, 81, 87, 93, 100, 100},
                {75, 74, 76, 81, 86, 92, 100, 100},
                {74, 73, 75, 80, 85, 91, 100, 100},
                {73, 72, 74, 79, 85, 91, 100, 100},
                {73, 72, 74, 78, 84, 90, 100, 100},
                {72, 71, 73, 78, 83, 89, 100, 100},
                {71, 70, 72, 77, 83, 89, 99, 100},
                {70, 69, 71, 76, 82, 88, 99, 100},
                {69, 68, 70, 75, 81, 88, 98, 100},
                {68, 68, 70, 75, 80, 87, 97, 100},
                {67, 67, 69, 74, 80, 86, 97, 100},
                {67, 66, 68, 73, 79, 86, 96, 100},
                {66, 65, 67, 72, 78, 85, 96, 100},
                {65, 64, 66, 72, 78, 84, 95, 100},
                {64, 64, 66, 71, 77, 84, 94, 100},
                {63, 63, 65, 70, 76, 83, 94, 100},
                {62, 62, 64, 69, 76, 83, 93, 100},
                {61, 61, 63, 69, 75, 82, 92, 100},
                {61, 60, 63, 68, 74, 81, 92, 99},
                {60, 59, 62, 67, 73, 81, 91, 99},
                {59, 59, 61, 66, 73, 80, 90, 99},
                {58, 58, 60, 66, 72, 79, 90, 98},
                {57, 57, 59, 65, 71, 79, 89, 98},
                {56, 56, 59, 64, 71, 78, 89, 98},
                {55, 55, 58, 63, 70, 78, 88, 98},
                {55, 55, 57, 63, 69, 77, 87, 97},
                {54, 54, 56, 62, 69, 76, 87, 97},
                {53, 53, 56, 61, 68, 76, 86, 97},
                {52, 52, 55, 60, 67, 75, 85, 96},
                {51, 51, 54, 60, 67, 74, 85, 96},
                {50, 51, 53, 59, 66, 74, 84, 96},
                {49, 50, 52, 58, 65, 73, 83, 95},
                {49, 49, 52, 57, 64, 73, 83, 95},
                {48, 48, 51, 57, 64, 72, 82, 95},
                {47, 47, 50, 56, 63, 71, 81, 95},
                {46, 46, 49, 55, 62, 71, 81, 94},
                {45, 46, 49, 54, 62, 70, 80, 94},
                {44, 45, 48, 54, 61, 69, 80, 94},
                {43, 44, 47, 53, 60, 69, 79, 93},
                {43, 43, 46, 52, 60, 68, 78, 93},
                {42, 42, 45, 51, 59, 68, 78, 93},
                {41, 42, 45, 51, 58, 67, 77, 92},
                {40, 41, 44, 50, 57, 66, 76, 92},
                {0, 40, 43, 49, 57, 66, 76, 92},
                {0, 0, 42, 48, 56, 65, 75, 92},
                {0, 0, 42, 48, 55, 64, 74, 91},
                {0, 0, 41, 47, 55, 64, 74, 91},
                {0, 0, 40, 46, 54, 63, 73, 91},
                {0, 0, 0, 45, 53, 63, 73, 90},
                {0, 0, 0, 45, 53, 62, 72, 90},
                {0, 0, 0, 44, 52, 61, 71, 90},
                {0, 0, 0, 43, 51, 61, 71, 89},
                {0, 0, 0, 42, 50, 60, 70, 89},
                {0, 0, 0, 42, 50, 59, 69, 89},
                {0, 0, 0, 41, 49, 59, 69, 89},
                {0, 0, 0, 40, 48, 58, 68, 88},//3:30
                {0, 0, 0, 0, 48, 58, 67, 88},
                {0, 0, 0, 0, 47, 57, 67, 88},
                {0, 0, 0, 0, 46, 56, 66, 87},
                {0, 0, 0, 0, 46, 56, 66, 87},
                {0, 0, 0, 0, 45, 55, 65, 87},
                {0, 0, 0, 0, 44, 54, 64, 86},
                {0, 0, 0, 0, 43, 54, 64, 86},
                {0, 0, 0, 0, 43, 53, 63, 86},
                {0, 0, 0, 0, 42, 53, 62, 86},
                {0, 0, 0, 0, 41, 52, 62, 85},
                {0, 0, 0, 0, 41, 51, 61, 85},
                {0, 0, 0, 0, 40, 51, 60, 85},
                {0, 0, 0, 0, 0, 50, 60, 84},
                {0, 0, 0, 0, 0, 49, 59, 84},
                {0, 0, 0, 0, 0, 49, 59, 84},
                {0, 0, 0, 0, 0, 48, 58, 83},
                {0, 0, 0, 0, 0, 48, 57, 83},
                {0, 0, 0, 0, 0, 47, 57, 83},
                {0, 0, 0, 0, 0, 46, 56, 83},
                {0, 0, 0, 0, 0, 46, 55, 82},
                {0, 0, 0, 0, 0, 45, 55, 82},
                {0, 0, 0, 0, 0, 44, 54, 82},
                {0, 0, 0, 0, 0, 44, 53, 81},
                {0, 0, 0, 0, 0, 43, 53, 81},
                {0, 0, 0, 0, 0, 43, 52, 81},
                {0, 0, 0, 0, 0, 42, 51, 80},
                {0, 0, 0, 0, 0, 41, 51, 80},
                {0, 0, 0, 0, 0, 41, 50, 80},
                {0, 0, 0, 0, 0, 40, 50, 79},//3:59
                {0, 0, 0, 0, 0, 0, 49, 79},
                {0, 0, 0, 0, 0, 0, 48, 79},
                {0, 0, 0, 0, 0, 0, 48, 79},
                {0, 0, 0, 0, 0, 0, 47, 78},
                {0, 0, 0, 0, 0, 0, 46, 78},
                {0, 0, 0, 0, 0, 0, 46, 48},
                {0, 0, 0, 0, 0, 0, 45, 77},
                {0, 0, 0, 0, 0, 0, 44, 77},
                {0, 0, 0, 0, 0, 0, 44, 77},
                {0, 0, 0, 0, 0, 0, 43, 76},
                {0, 0, 0, 0, 0, 0, 73, 76},
                {0, 0, 0, 0, 0, 0, 72, 76},
                {0, 0, 0, 0, 0, 0, 41, 76},
                {0, 0, 0, 0, 0, 0, 41, 75},
                {0, 0, 0, 0, 0, 0, 40, 75},
                {0, 0, 0, 0, 0, 0, 0, 75},
                {0, 0, 0, 0, 0, 0, 0, 74},
                {0, 0, 0, 0, 0, 0, 0, 74},
                {0, 0, 0, 0, 0, 0, 0, 74},
                {0, 0, 0, 0, 0, 0, 0, 73},
                {0, 0, 0, 0, 0, 0, 0, 73},
                {0, 0, 0, 0, 0, 0, 0, 73},
                {0, 0, 0, 0, 0, 0, 0, 73},
                {0, 0, 0, 0, 0, 0, 0, 72},
                {0, 0, 0, 0, 0, 0, 0, 72},
                {0, 0, 0, 0, 0, 0, 0, 72},
                {0, 0, 0, 0, 0, 0, 0, 71},
                {0, 0, 0, 0, 0, 0, 0, 71},
                {0, 0, 0, 0, 0, 0, 0, 71},
                {0, 0, 0, 0, 0, 0, 0, 70},
                {0, 0, 0, 0, 0, 0, 0, 70},
                {0, 0, 0, 0, 0, 0, 0, 70},
                {0, 0, 0, 0, 0, 0, 0, 70},
                {0, 0, 0, 0, 0, 0, 0, 69},
                {0, 0, 0, 0, 0, 0, 0, 69},
                {0, 0, 0, 0, 0, 0, 0, 69},
                {0, 0, 0, 0, 0, 0, 0, 68},
                {0, 0, 0, 0, 0, 0, 0, 68},
                {0, 0, 0, 0, 0, 0, 0, 68},
                {0, 0, 0, 0, 0, 0, 0, 67},
                {0, 0, 0, 0, 0, 0, 0, 67},
                {0, 0, 0, 0, 0, 0, 0, 67},
                {0, 0, 0, 0, 0, 0, 0, 67},
                {0, 0, 0, 0, 0, 0, 0, 66},
                {0, 0, 0, 0, 0, 0, 0, 66},
                {0, 0, 0, 0, 0, 0, 0, 66},
                {0, 0, 0, 0, 0, 0, 0, 65},
                {0, 0, 0, 0, 0, 0, 0, 65},
                {0, 0, 0, 0, 0, 0, 0, 65},
                {0, 0, 0, 0, 0, 0, 0, 64},
                {0, 0, 0, 0, 0, 0, 0, 64},
                {0, 0, 0, 0, 0, 0, 0, 64},
                {0, 0, 0, 0, 0, 0, 0, 64},
                {0, 0, 0, 0, 0, 0, 0, 63},
                {0, 0, 0, 0, 0, 0, 0, 63},
                {0, 0, 0, 0, 0, 0, 0, 63},
                {0, 0, 0, 0, 0, 0, 0, 62},
                {0, 0, 0, 0, 0, 0, 0, 62},
                {0, 0, 0, 0, 0, 0, 0, 62},
                {0, 0, 0, 0, 0, 0, 0, 61},
                {0, 0, 0, 0, 0, 0, 0, 61},
                {0, 0, 0, 0, 0, 0, 0, 61},
                {0, 0, 0, 0, 0, 0, 0, 61},
                {0, 0, 0, 0, 0, 0, 0, 60},
                {0, 0, 0, 0, 0, 0, 0, 60},
                {0, 0, 0, 0, 0, 0, 0, 60},
                {0, 0, 0, 0, 0, 0, 0, 59},
                {0, 0, 0, 0, 0, 0, 0, 59},
                {0, 0, 0, 0, 0, 0, 0, 59},
                {0, 0, 0, 0, 0, 0, 0, 58},
                {0, 0, 0, 0, 0, 0, 0, 58},
                {0, 0, 0, 0, 0, 0, 0, 58},
                {0, 0, 0, 0, 0, 0, 0, 57},
                {0, 0, 0, 0, 0, 0, 0, 57},
                {0, 0, 0, 0, 0, 0, 0, 57},
                {0, 0, 0, 0, 0, 0, 0, 57},
                {0, 0, 0, 0, 0, 0, 0, 56},
                {0, 0, 0, 0, 0, 0, 0, 56},
                {0, 0, 0, 0, 0, 0, 0, 56},
                {0, 0, 0, 0, 0, 0, 0, 55},
                {0, 0, 0, 0, 0, 0, 0, 55},
                {0, 0, 0, 0, 0, 0, 0, 55},
                {0, 0, 0, 0, 0, 0, 0, 54},
                {0, 0, 0, 0, 0, 0, 0, 54},
                {0, 0, 0, 0, 0, 0, 0, 54},
                {0, 0, 0, 0, 0, 0, 0, 54},
                {0, 0, 0, 0, 0, 0, 0, 53},
                {0, 0, 0, 0, 0, 0, 0, 53},
                {0, 0, 0, 0, 0, 0, 0, 53},
                {0, 0, 0, 0, 0, 0, 0, 52},
                {0, 0, 0, 0, 0, 0, 0, 52},
                {0, 0, 0, 0, 0, 0, 0, 52},
                {0, 0, 0, 0, 0, 0, 0, 51},
                {0, 0, 0, 0, 0, 0, 0, 51},
                {0, 0, 0, 0, 0, 0, 0, 51},
                {0, 0, 0, 0, 0, 0, 0, 51},
                {0, 0, 0, 0, 0, 0, 0, 50},
                {0, 0, 0, 0, 0, 0, 0, 50},
                {0, 0, 0, 0, 0, 0, 0, 50},
                {0, 0, 0, 0, 0, 0, 0, 49},
                {0, 0, 0, 0, 0, 0, 0, 49},
                {0, 0, 0, 0, 0, 0, 0, 49},
                {0, 0, 0, 0, 0, 0, 0, 48},
                {0, 0, 0, 0, 0, 0, 0, 48},
                {0, 0, 0, 0, 0, 0, 0, 48},
                {0, 0, 0, 0, 0, 0, 0, 48},
                {0, 0, 0, 0, 0, 0, 0, 47},
                {0, 0, 0, 0, 0, 0, 0, 47},
                {0, 0, 0, 0, 0, 0, 0, 47},
                {0, 0, 0, 0, 0, 0, 0, 46},
                {0, 0, 0, 0, 0, 0, 0, 46},
                {0, 0, 0, 0, 0, 0, 0, 46},
                {0, 0, 0, 0, 0, 0, 0, 45},
                {0, 0, 0, 0, 0, 0, 0, 45},
                {0, 0, 0, 0, 0, 0, 0, 45},
                {0, 0, 0, 0, 0, 0, 0, 45},
                {0, 0, 0, 0, 0, 0, 0, 44},
                {0, 0, 0, 0, 0, 0, 0, 44},
                {0, 0, 0, 0, 0, 0, 0, 44},
                {0, 0, 0, 0, 0, 0, 0, 43},
                {0, 0, 0, 0, 0, 0, 0, 43},
                {0, 0, 0, 0, 0, 0, 0, 43},
                {0, 0, 0, 0, 0, 0, 0, 42},
                {0, 0, 0, 0, 0, 0, 0, 42},
                {0, 0, 0, 0, 0, 0, 0, 42},
                {0, 0, 0, 0, 0, 0, 0, 42},
                {0, 0, 0, 0, 0, 0, 0, 41},
                {0, 0, 0, 0, 0, 0, 0, 41},
                {0, 0, 0, 0, 0, 0, 0, 41},
                {0, 0, 0, 0, 0, 0, 0, 40},
                {0, 0, 0, 0, 0, 0, 0, 0}};
        else
            MUFTable =new int[][]{ {100, 100, 100, 100, 100, 100, 100, 100},
                    {100, 100, 99, 100, 100, 100, 100, 100},
                    {100, 100, 99, 100, 100, 100, 100, 100},
                    {100, 100, 98, 100, 100, 100, 100, 100},
                    {100, 99, 98, 100, 100, 100, 100, 100},
                    {100, 99, 97, 100, 100, 100, 100, 100},
                    {100, 98, 97, 100, 100, 100, 100, 100},
                    {100, 98, 96, 100, 100, 100, 100, 100},
                    {100, 97, 96, 99, 100, 100, 100, 100},
                    {100, 97, 95, 99, 100, 100, 100, 100},
                    {100, 96, 95, 98, 100, 100, 100, 100},
                    {100, 96, 94, 98, 100, 100, 100, 100},
                    {100, 95, 94, 97, 100, 100, 100, 100},
                    {100, 94, 93, 97, 99, 100, 100, 100},
                    {99, 94, 93, 96, 99, 100, 100, 100},
                    {99, 93, 92, 96, 98, 100, 100, 100},
                    {98, 93, 92, 95, 98, 100, 100, 100},
                    {98, 92, 91, 95, 97, 99, 100, 100},
                    {97, 92, 91, 94, 97, 99, 100, 100},
                    {97, 91, 90, 94, 96, 98, 100, 100},
                    {96, 91, 90, 93, 96, 98, 100, 100},
                    {96, 90, 89, 93, 95, 97, 100, 100},
                    {95, 90, 89, 92, 95, 97, 100, 100},
                    {95, 89, 88, 92, 94, 96, 100, 100},
                    {94, 88, 88, 91, 94, 96, 100, 100},
                    {94, 88, 87, 91, 93, 95, 100, 100},
                    {93, 87, 87, 90, 93, 95, 100, 100},
                    {93, 87, 86, 90, 92, 94, 100, 100},
                    {92, 86, 86, 89, 92, 94, 100, 100},
                    {92, 86, 85, 89, 91, 93, 100, 100},
                    {91, 85, 85, 88, 91, 93, 100, 100},//3:12
                    {91, 85, 84, 87, 90, 92, 100, 100},
                    {90, 84, 84, 87, 90, 92, 100, 100},
                    {90, 83, 83, 86, 89, 91, 100, 100},
                    {89, 83, 83, 86, 89, 91, 100, 100},
                    {89, 82, 82, 85, 88, 90, 100, 100},
                    {88, 82, 82, 85, 88, 90, 100, 100},
                    {88, 81, 81, 84, 87, 89, 100, 100},
                    {87, 81, 81, 84, 87, 89, 100, 100},
                    {87, 80, 80, 83, 86, 88, 100, 100},
                    {86, 80, 80, 83, 86, 88, 100, 100},
                    {86, 79, 79, 82, 85, 87, 100, 100},
                    {85, 79, 79, 82, 85, 87, 100, 100},
                    {85, 78, 78, 81, 84, 86, 100, 100},
                    {84, 77, 78, 81, 84, 86, 100, 100},
                    {84, 77, 77, 80, 83, 85, 100, 100},
                    {83, 76, 77, 80, 83, 85, 100, 100},
                    {83, 76, 76, 79, 82, 85, 100, 100},
                    {82, 75, 76, 79, 82, 84, 100, 100},
                    {82, 75, 75, 78, 81, 84, 100, 100},
                    {81, 74, 75, 78, 81, 83, 100, 100},
                    {81, 74, 74, 77, 80, 83, 100, 100},
                    {80, 73, 74, 77, 80, 82, 100, 100},
                    {80, 72, 73, 76, 80, 82, 100, 100},
                    {79, 72, 73, 75, 79, 81, 99, 100},
                    {79, 71, 72, 75, 79, 81, 99, 100},
                    {78, 71, 72, 74, 78, 80, 98, 100},
                    {78, 70, 71, 74, 78, 80, 97, 100},
                    {77, 70, 71, 73, 77, 79, 97, 100},
                    {77, 69, 70, 73, 77, 79, 96, 100},
                    {76, 69, 69, 72, 76, 78, 95, 100},
                    {76, 68, 69, 72, 76, 78, 95, 100},
                    {75, 68, 68, 71, 75, 77, 94, 100},
                    {75, 67, 68, 71, 75, 77, 93, 99},
                    {74, 66, 67, 70, 74, 76, 93, 99},
                    {74, 66, 67, 70, 74, 76, 92, 99},
                    {73, 65, 66, 69, 73, 75, 91, 98},
                    {73, 65, 66, 69, 73, 75, 91, 98},
                    {72, 64, 65, 68, 72, 74, 90, 98},
                    {72, 64, 65, 68, 72, 74, 89, 97},
                    {71, 63, 64, 67, 71, 73, 89, 97},
                    {71, 63, 64, 67, 71, 73, 88, 96},
                    {70, 62, 63, 66, 70, 72, 87, 96},
                    {69, 61, 63, 66, 70, 72, 87, 96},
                    {69, 61, 62, 65, 69, 71, 86, 95},
                    {68, 60, 62, 65, 69, 71, 85, 95},
                    {68, 60, 61, 64, 68, 70, 85, 95},
                    {67, 59, 61, 63, 68, 70, 84, 94},
                    {67, 59, 60, 63, 67, 70, 84, 94},
                    {66, 58, 60, 62, 67, 69, 83, 94},
                    {66, 58, 59, 62, 66, 69, 82, 93},
                    {65, 57, 59, 61, 66, 68, 82, 93},
                    {65, 57, 58, 61, 65, 68, 81, 93},
                    {64, 56, 58, 60, 65, 67, 80, 92},
                    {64, 55, 57, 60, 64, 67, 80, 92},
                    {63, 55, 57, 59, 64, 66, 79, 92},
                    {63, 54, 56, 59, 63, 66, 78, 91},
                    {62, 54, 56, 58, 63, 65, 78, 91},
                    {62, 53, 55, 58, 62, 65, 77, 91},
                    {61, 53, 55, 57, 62, 64, 76, 90},//4:11
                    {61, 52, 54, 57, 61, 64, 76, 90},
                    {60, 52, 54, 56, 61, 63, 75, 89},
                    {60, 51, 53, 56, 60, 63, 74, 89},
                    {59, 50, 53, 55, 60, 62, 74, 89},
                    {59, 50, 52, 55, 60, 62, 73, 88},
                    {58, 49, 52, 54, 59, 61, 72, 88},
                    {58, 49, 51, 54, 59, 61, 72, 88},
                    {57, 48, 51, 53, 58, 60, 71, 87},
                    {57, 48, 50, 53, 58, 60, 70, 87},
                    {56, 47, 50, 52, 57, 59, 70, 87},
                    {56, 47, 49, 51, 57, 59, 69, 86},
                    {55, 46, 49, 51, 56, 58, 68, 86},
                    {55, 46, 48, 50, 56, 58, 68, 86},
                    {54, 45, 48, 50, 55, 57, 67, 85},
                    {54, 44, 47, 49, 55, 57, 66, 85},
                    {53, 44, 47, 49, 54, 56, 66, 85},
                    {53, 43, 46, 48, 54, 56, 65, 84},
                    {52, 43, 46, 48, 53, 55, 64, 84},
                    {52, 42, 45, 47, 53, 55, 64, 84},
                    {51, 42, 45, 47, 52, 55, 63, 83},
                    {51, 41, 44, 46, 52, 54, 62, 83},
                    {50, 41, 44, 46, 51, 54, 62, 82},
                    {50, 40, 43, 45, 51, 53, 61, 82},//4:34
                    {49, 0, 43, 45, 50, 53, 60, 82},
                    {49, 0, 42, 44, 50, 52, 60, 81},
                    {48, 0, 42, 44, 49, 52, 59, 81},
                    {48, 0, 41, 43, 49, 51, 58, 81},
                    {47, 0, 41, 43, 48, 51, 58, 80},
                    {47, 0, 40, 42, 48, 50, 57, 80},
                    {46, 0, 0, 42, 47, 50, 56, 80},
                    {46, 0, 0, 41, 47, 49, 56, 79},
                    {45, 0, 0, 41, 46, 49, 55, 79},
                    {45, 0, 0, 40, 46, 48, 55, 79},
                    {44, 0, 0, 0, 45, 48, 54, 78},
                    {44, 0, 0, 0, 45, 47, 53, 78},
                    {43, 0, 0, 0, 44, 47, 53, 78},
                    {43, 0, 0, 0, 44, 46, 52, 77},
                    {42, 0, 0, 0, 43, 46, 51, 77},
                    {42, 0, 0, 0, 43, 45, 51, 76},
                    {41, 0, 0, 0, 42, 45, 50, 76},
                    {41, 0, 0, 0, 42, 44, 49, 76},
                    {40, 0, 0, 0, 41, 44, 49, 75},
                    {0, 0, 0, 0, 41, 43, 48, 75},
                    {0, 0, 0, 0, 40, 43, 47, 75},
                    {0, 0, 0, 0, 40, 42, 47, 74},
                    {0, 0, 0, 0, 0, 42, 46, 74},
                    {0, 0, 0, 0, 0, 41, 45, 74},
                    {0, 0, 0, 0, 0, 41, 45, 73},
                    {0, 0, 0, 0, 0, 40, 44, 73},
                    {0, 0, 0, 0, 0, 40, 43, 73},
                    {0, 0, 0, 0, 0, 0, 43, 72},
                    {0, 0, 0, 0, 0, 0, 42, 72},
                    {0, 0, 0, 0, 0, 0, 41, 72},
                    {0, 0, 0, 0, 0, 0, 41, 71},
                    {0, 0, 0, 0, 0, 0, 40, 71},
                    {0, 0, 0, 0, 0, 0, 0, 71},
                    {0, 0, 0, 0, 0, 0, 0, 70},
                    {0, 0, 0, 0, 0, 0, 0, 70},
                    {0, 0, 0, 0, 0, 0, 0, 69},
                    {0, 0, 0, 0, 0, 0, 0, 69},
                    {0, 0, 0, 0, 0, 0, 0, 69},
                    {0, 0, 0, 0, 0, 0, 0, 68},
                    {0, 0, 0, 0, 0, 0, 0, 68},
                    {0, 0, 0, 0, 0, 0, 0, 68},
                    {0, 0, 0, 0, 0, 0, 0, 67},
                    {0, 0, 0, 0, 0, 0, 0, 67},
                    {0, 0, 0, 0, 0, 0, 0, 67},
                    {0, 0, 0, 0, 0, 0, 0, 66},
                    {0, 0, 0, 0, 0, 0, 0, 66},
                    {0, 0, 0, 0, 0, 0, 0, 66},
                    {0, 0, 0, 0, 0, 0, 0, 65},
                    {0, 0, 0, 0, 0, 0, 0, 65},
                    {0, 0, 0, 0, 0, 0, 0, 65},
                    {0, 0, 0, 0, 0, 0, 0, 64},
                    {0, 0, 0, 0, 0, 0, 0, 64},
                    {0, 0, 0, 0, 0, 0, 0, 64},
                    {0, 0, 0, 0, 0, 0, 0, 63},
                    {0, 0, 0, 0, 0, 0, 0, 63},
                    {0, 0, 0, 0, 0, 0, 0, 62},
                    {0, 0, 0, 0, 0, 0, 0, 62},
                    {0, 0, 0, 0, 0, 0, 0, 62},
                    {0, 0, 0, 0, 0, 0, 0, 61},
                    {0, 0, 0, 0, 0, 0, 0, 61},
                    {0, 0, 0, 0, 0, 0, 0, 61},
                    {0, 0, 0, 0, 0, 0, 0, 60},
                    {0, 0, 0, 0, 0, 0, 0, 60},
                    {0, 0, 0, 0, 0, 0, 0, 60},
                    {0, 0, 0, 0, 0, 0, 0, 59},
                    {0, 0, 0, 0, 0, 0, 0, 59},
                    {0, 0, 0, 0, 0, 0, 0, 59},
                    {0, 0, 0, 0, 0, 0, 0, 58},
                    {0, 0, 0, 0, 0, 0, 0, 58},
                    {0, 0, 0, 0, 0, 0, 0, 58},
                    {0, 0, 0, 0, 0, 0, 0, 57},
                    {0, 0, 0, 0, 0, 0, 0, 57},
                    {0, 0, 0, 0, 0, 0, 0, 56},
                    {0, 0, 0, 0, 0, 0, 0, 56},
                    {0, 0, 0, 0, 0, 0, 0, 56},
                    {0, 0, 0, 0, 0, 0, 0, 55},
                    {0, 0, 0, 0, 0, 0, 0, 55},
                    {0, 0, 0, 0, 0, 0, 0, 55},
                    {0, 0, 0, 0, 0, 0, 0, 54},
                    {0, 0, 0, 0, 0, 0, 0, 54},
                    {0, 0, 0, 0, 0, 0, 0, 54},
                    {0, 0, 0, 0, 0, 0, 0, 53},
                    {0, 0, 0, 0, 0, 0, 0, 53},
                    {0, 0, 0, 0, 0, 0, 0, 53},
                    {0, 0, 0, 0, 0, 0, 0, 52},
                    {0, 0, 0, 0, 0, 0, 0, 52},
                    {0, 0, 0, 0, 0, 0, 0, 52},
                    {0, 0, 0, 0, 0, 0, 0, 51},
                    {0, 0, 0, 0, 0, 0, 0, 51},
                    {0, 0, 0, 0, 0, 0, 0, 51},
                    {0, 0, 0, 0, 0, 0, 0, 50},
                    {0, 0, 0, 0, 0, 0, 0, 50},
                    {0, 0, 0, 0, 0, 0, 0, 49},
                    {0, 0, 0, 0, 0, 0, 0, 49},
                    {0, 0, 0, 0, 0, 0, 0, 49},
                    {0, 0, 0, 0, 0, 0, 0, 48},
                    {0, 0, 0, 0, 0, 0, 0, 48},
                    {0, 0, 0, 0, 0, 0, 0, 48},
                    {0, 0, 0, 0, 0, 0, 0, 47},
                    {0, 0, 0, 0, 0, 0, 0, 47},
                    {0, 0, 0, 0, 0, 0, 0, 47},
                    {0, 0, 0, 0, 0, 0, 0, 46},
                    {0, 0, 0, 0, 0, 0, 0, 46},
                    {0, 0, 0, 0, 0, 0, 0, 46},
                    {0, 0, 0, 0, 0, 0, 0, 45},
                    {0, 0, 0, 0, 0, 0, 0, 45},
                    {0, 0, 0, 0, 0, 0, 0, 45},
                    {0, 0, 0, 0, 0, 0, 0, 44},
                    {0, 0, 0, 0, 0, 0, 0, 44},
                    {0, 0, 0, 0, 0, 0, 0, 44},
                    {0, 0, 0, 0, 0, 0, 0, 43},
                    {0, 0, 0, 0, 0, 0, 0, 43},
                    {0, 0, 0, 0, 0, 0, 0, 42},
                    {0, 0, 0, 0, 0, 0, 0, 42},
                    {0, 0, 0, 0, 0, 0, 0, 42},
                    {0, 0, 0, 0, 0, 0, 0, 41},
                    {0, 0, 0, 0, 0, 0, 0, 41},
                    {0, 0, 0, 0, 0, 0, 0, 41},
                    {0, 0, 0, 0, 0, 0, 0, 40},
                    {0, 0, 0, 0, 0, 0, 0, 0}};

        int i =0;
        while(MUFTable[i][ageGroup]>=scoreNeeded)
            i++;
        i--;
        int totalSeconds = 0;
        if (!Elevation)
            totalSeconds += 8;
        if(Gender)    //calculate male time 2:04
            totalSeconds+= 124;
        else //calculate female time 2:42 -- elevation add 8 seconds
            totalSeconds += 162;

        totalSeconds += i;

        MUFResults = new int[] {MUFTable[i][ageGroup], totalSeconds/60,totalSeconds % 60};
        return MUFResults;
        }


        public int getTotalScore() {
            return this.TotalScore;
        }

        public int getCFTClass() {
            return this.CFTClass;
        }

        public String elevationString() {
            if (Elevation)
                return "";
            else
                return "Adjustment for elevation has been factored in this result.";
        }

        public String getCFTClassString() {
            String temp;
            switch (CFTClass) {
                case 0:
                    temp = "You failed!";
                    break;
                case 1:
                    temp = "First Class";
                    break;
                case 2:
                    temp = "Second Class";
                    break;
                case 3:
                    temp = "Third Class";
                    break;
                default:
                    temp = "Error";
                    break;

            }
            return temp;
        }

        public String genderString() {
            if (Gender)
                return "Male";
            else
                return "Female";
        }




        private void makeScores() {
            int[][] MUFMales;
            int[][] MUFFemales;
            int[][] MTCMales;
            int[][] MTCFemales;
            int[][] ACLMales;
            int[][] ACLFemales;
            int tempMTCSec = MTCSec;
            int tempMTCMin = MTCMin;
            int tempMUFMin = MUFMin;
            int tempMUFSec = MUFSec;
            if (!Elevation)
            {
                Log.i("Elevation", "True");
                tempMTCSec = tempMTCSec-6;
                if(tempMTCSec < 0)
                {
                    tempMTCSec = tempMTCSec+60;
                    tempMTCMin = tempMTCMin-1;
                }

                tempMUFSec = tempMUFSec-8;
                if (tempMUFSec < 0)
                {
                    tempMUFSec = tempMUFSec + 60;
                    tempMUFMin = tempMUFMin -1;
                }
                if(tempMTCMin < 0) {
                    tempMTCMin = 0;
                    tempMTCSec = 0;
                }
                if(tempMUFMin < 0) {
                    tempMUFMin = 0;
                    tempMUFSec = 0;
                }

            }


            if (Gender) {//male tables
                MTCMales = new int[][]{
                        {100,100,100,100,100,100,100,100}, //2:38
                        {100, 99,100,100,100,100,100,100},
                        {100, 98, 99,100,100,100,100,100},
                        { 99, 98, 99,100,100,100,100,100},
                        { 98, 96, 97,100,100,100,100,100}, //2:42
                        { 97, 96, 97, 99,100,100,100,100},
                        { 96, 95, 96, 98,100,100,100,100},
                        { 95, 94, 95, 97,100,100,100,100},
                        { 94, 93, 94, 97, 99,100,100,100},
                        { 94, 92, 93, 96, 98,100,100,100},
                        { 93, 91, 92, 95, 98,100,100,100},
                        { 92, 90, 91, 94, 97,100,100,100},
                        { 91, 89, 90, 93, 96,100,100,100},
                        { 90, 88, 90, 92, 95,100,100,100},
                        { 89, 87, 89, 91, 94,100,100,100},
                        { 88, 87, 88, 90, 93, 99,100,100},
                        { 87, 86, 87, 90, 93, 98,100,100},
                        { 86, 85, 86, 89, 92, 98,100,100},
                        { 85, 84, 85, 88, 91, 97,100,100},
                        { 84, 83, 84, 87, 90, 96,100,100},
                        { 83, 82, 83, 86, 89, 95,100,100},
                        { 82, 81, 83, 85, 88, 95,100,100},
                        { 82, 80, 82, 84, 88, 94,100,100},
                        { 81, 79, 81, 83, 87, 93,100,100},
                        { 80, 79, 80, 83, 86, 92, 99,100},
                        { 79, 78, 79, 82, 85, 92, 99,100},
                        { 78, 77, 78, 81, 84, 91, 98,100},
                        { 77, 76, 77, 80, 84, 90, 97,100},
                        { 76, 75, 77, 79, 83, 89, 97, 99},
                        { 75, 74, 76, 78, 82, 89, 96, 99},
                        { 75, 74, 76, 78, 82, 89, 96, 99},
                        { 73, 72, 74, 77, 80, 87, 94, 98},
                        { 72, 71, 73, 76, 79, 86, 94, 97},
                        { 71, 70, 72, 75, 79, 86, 93, 97},
                        { 70, 70, 71, 74, 78, 85, 92, 96},
                        { 70, 69, 70, 73, 77, 84, 92, 96},
                        { 69, 68, 70, 72, 76, 83, 91, 95},
                        { 68, 67, 69, 71, 75, 83, 90, 95},
                        { 67, 66, 68, 70, 75, 82, 90, 94},
                        { 66, 65, 67, 70, 74, 81, 89, 94},
                        { 65, 64, 66, 69, 73, 80, 88, 93},
                        { 64, 63, 65, 68, 72, 79, 88, 93},
                        { 63, 62, 64, 67, 71, 79, 87, 92},
                        { 62, 61, 63, 66, 70, 78, 86, 92},
                        { 61, 61, 63, 65, 70, 77, 86, 91},
                        { 60, 60, 62, 64, 69, 76, 85, 91},//3:23 top of second page
                        { 59, 59, 61, 63, 68, 76, 84, 90},
                        { 58, 58, 60, 63, 67, 75, 83, 90},
                        { 58, 57, 59, 62, 66, 74, 83, 89},
                        { 57, 56, 58, 61, 65, 73, 82, 89},
                        { 56, 55, 57, 60, 65, 73, 81, 88},
                        { 55, 54, 57, 59, 64, 72, 81, 88},
                        { 54, 53, 56, 58, 63, 71, 80, 87},
                        { 53, 53, 55, 57, 62, 70, 79, 87},
                        { 52, 52, 54, 57, 61, 70, 79, 86},
                        { 51, 51, 53, 56, 61, 69, 78, 86},
                        { 50, 50, 52, 55, 60, 68, 77, 85},
                        { 49, 49, 51, 54, 59, 67, 77, 85},
                        { 48, 48, 50, 53, 58, 67, 76, 85},
                        { 47, 47, 50, 52, 57, 66, 75, 84},
                        { 46, 46, 49, 51, 56, 65, 74, 84},
                        { 46, 45, 48, 50, 56, 64, 74, 83},
                        { 45, 44, 47, 50, 55, 64, 73, 83},
                        { 44, 44, 46, 49, 54, 63, 72, 82},
                        { 43, 43, 45, 48, 53, 62, 72, 82},
                        { 42, 42, 44, 47, 52, 61, 71, 81},
                        { 41, 41, 43, 46, 52, 61, 70, 81},
                        { 40, 40, 43, 45, 51, 60, 70, 80},//CUTOFF FOR FIRST 2 AGE GROUPS
                        {  0,  0, 42, 44, 50, 59, 69, 80},
                        {  0,  0, 41, 43, 49, 58, 68, 79},
                        {  0,  0, 40, 43, 48, 57, 68, 79},
                        {  0,  0,  0, 42, 47, 57, 67, 78},
                        {  0,  0,  0, 41, 47, 56, 66, 78},
                        {  0,  0,  0, 40, 46, 55, 66, 77},
                        {  0,  0,  0,  0, 45, 54, 65, 77},
                        {  0,  0,  0,  0, 44, 54, 64, 76},
                        {  0,  0,  0,  0, 43, 53, 63, 76},
                        {  0,  0,  0,  0, 42, 52, 63, 75},
                        {  0,  0,  0,  0, 42, 51, 62, 75},
                        {  0,  0,  0,  0, 41, 51, 61, 74},
                        {  0,  0,  0,  0, 40, 50, 61, 74},//3:58
                        {  0,  0,  0,  0,  0, 49, 60, 73},
                        {  0,  0,  0,  0,  0, 48, 59, 73},
                        {  0,  0,  0,  0,  0, 48, 59, 72},
                        {  0,  0,  0,  0,  0, 47, 58, 72},
                        {  0,  0,  0,  0,  0, 46, 57, 71},
                        {  0,  0,  0,  0,  0, 45, 57, 71},
                        {  0,  0,  0,  0,  0, 45, 56, 70},
                        {  0,  0,  0,  0,  0, 43, 54, 70},
                        {  0,  0,  0,  0,  0, 42, 54, 69},
                        {  0,  0,  0,  0,  0, 42, 53, 69},
                        {  0,  0,  0,  0,  0, 41, 52, 68},
                        {  0,  0,  0,  0,  0, 40, 52, 68},//4:11
                        {  0,  0,  0,  0,  0,  0, 51, 67},
                        {  0,  0,  0,  0,  0,  0, 50, 67},
                        {  0,  0,  0,  0,  0,  0, 50, 66},
                        {  0,  0,  0,  0,  0,  0, 49, 66},
                        {  0,  0,  0,  0,  0,  0, 48, 65},
                        {  0,  0,  0,  0,  0,  0, 48, 65},
                        {  0,  0,  0,  0,  0,  0, 47, 64},
                        {  0,  0,  0,  0,  0,  0, 46, 64},
                        {  0,  0,  0,  0,  0,  0, 46, 63},
                        {  0,  0,  0,  0,  0,  0, 45, 63},
                        {  0,  0,  0,  0,  0,  0, 44, 62},
                        {  0,  0,  0,  0,  0,  0, 43, 62},
                        {  0,  0,  0,  0,  0,  0, 43, 61},
                        {  0,  0,  0,  0,  0,  0, 42, 61},
                        {  0,  0,  0,  0,  0,  0, 41, 60},
                        {  0,  0,  0,  0,  0,  0, 41, 60},
                        {  0,  0,  0,  0,  0,  0, 40, 59},
                        {  0,  0,  0,  0,  0,  0,  0, 59},
                        {  0,  0,  0,  0,  0,  0,  0, 58},
                        {  0,  0,  0,  0,  0,  0,  0, 58},
                        {  0,  0,  0,  0,  0,  0,  0, 57},
                        {  0,  0,  0,  0,  0,  0,  0, 57},
                        {  0,  0,  0,  0,  0,  0,  0, 56},
                        {  0,  0,  0,  0,  0,  0,  0, 56},
                        {  0,  0,  0,  0,  0,  0,  0, 55},
                        {  0,  0,  0,  0,  0,  0,  0, 55},
                        {  0,  0,  0,  0,  0,  0,  0, 55},
                        {  0,  0,  0,  0,  0,  0,  0, 54},
                        {  0,  0,  0,  0,  0,  0,  0, 54},
                        {  0,  0,  0,  0,  0,  0,  0, 53},
                        {  0,  0,  0,  0,  0,  0,  0, 53},
                        {  0,  0,  0,  0,  0,  0,  0, 52},
                        {  0,  0,  0,  0,  0,  0,  0, 52},
                        {  0,  0,  0,  0,  0,  0,  0, 51},
                        {  0,  0,  0,  0,  0,  0,  0, 51},
                        {  0,  0,  0,  0,  0,  0,  0, 50},
                        {  0,  0,  0,  0,  0,  0,  0, 50},
                        {  0,  0,  0,  0,  0,  0,  0, 49},
                        {  0,  0,  0,  0,  0,  0,  0, 49},
                        {  0,  0,  0,  0,  0,  0,  0, 48},
                        {  0,  0,  0,  0,  0,  0,  0, 48},
                        {  0,  0,  0,  0,  0,  0,  0, 47},
                        {  0,  0,  0,  0,  0,  0,  0, 47},
                        {  0,  0,  0,  0,  0,  0,  0, 46},
                        {  0,  0,  0,  0,  0,  0,  0, 46},
                        {  0,  0,  0,  0,  0,  0,  0, 45},
                        {  0,  0,  0,  0,  0,  0,  0, 45},
                        {  0,  0,  0,  0,  0,  0,  0, 44},
                        {  0,  0,  0,  0,  0,  0,  0, 44},
                        {  0,  0,  0,  0,  0,  0,  0, 43},
                        {  0,  0,  0,  0,  0,  0,  0, 43},
                        {  0,  0,  0,  0,  0,  0,  0, 42},
                        {  0,  0,  0,  0,  0,  0,  0, 42},
                        {  0,  0,  0,  0,  0,  0,  0, 41},
                        {  0,  0,  0,  0,  0,  0,  0, 41},
                        {  0,  0,  0,  0,  0,  0,  0, 40},
                        {  0,  0,  0,  0,  0,  0,  0,  0}
                };

                ACLMales= new int[][]{
                        {100,100,100,100,100,100,100,100},
                        {100,100,100, 99,100,100,100,100},
                        {100,100,100, 98,100,100,100,100},
                        {100,100,100, 97,100,100,100,100},
                        {100,100,100, 95,100,100,100,100},
                        {100,100, 99, 94,100,100,100,100},
                        {100, 99, 98, 93,100,100,100,100},
                        {100, 98, 96, 92,100,100,100,100},
                        {100, 96, 95, 91,100,100,100,100},
                        {100, 95, 94, 90,100,100,100,100},
                        {100, 94, 93, 89,100,100,100,100},
                        {100, 93, 91, 88,100,100,100,100},
                        {100, 91, 90, 86, 97,100,100,100},
                        {100, 90, 89, 85, 96,100,100,100},
                        {100, 89, 88, 84, 94,100,100,100},
                        { 99, 88, 87, 83, 93, 99,100,100},
                        { 97, 86, 85, 82, 92, 97,100,100},
                        { 96, 85, 84, 81, 90, 96,100,100},
                        { 95, 84, 83, 80, 89, 94,100,100},
                        { 93, 83, 82, 78, 87, 93,100,100},
                        { 92, 81, 80, 77, 86, 91,100,100},
                        { 90, 80, 79, 76, 85, 90, 98,100},
                        { 89, 79, 78, 75, 83, 88, 97,100},
                        { 88, 78, 77, 74, 82, 87, 95,100},
                        { 86, 76, 76, 73, 80, 85, 93,100},//95
                        { 85, 75, 74, 72, 79, 84, 91,100},
                        { 84, 74, 73, 71, 78, 82, 90, 99},
                        { 82, 73, 72, 69, 76, 81, 88, 98},
                        { 81, 71, 71, 68, 75, 79, 86, 98},
                        { 80, 70, 69, 67, 73, 78, 85, 97},
                        { 78, 69, 68, 66, 72, 76, 83, 96},
                        { 77, 68, 67, 65, 71, 75, 81, 95},
                        { 75, 66, 66, 64, 69, 73, 79, 95},
                        { 74, 65, 64, 63, 68, 72, 78, 94},
                        { 73, 64, 63, 62, 67, 70, 76, 93},
                        { 71, 63, 62, 60, 65, 69, 74, 92},
                        { 70, 61, 61, 59, 64, 67, 73, 92},
                        { 69, 60, 60, 58, 62, 66, 71, 91},
                        { 67, 59, 58, 57, 61, 64, 69, 90},
                        { 66, 58, 57, 56, 60, 63, 67, 89},
                        { 65, 56, 56, 55, 58, 61, 66, 89},
                        { 63, 55, 55, 54, 57, 60, 64, 88},
                        { 62, 54, 53, 52, 55, 58, 62, 87},
                        { 60, 53, 52, 51, 54, 57, 61, 86},//77
                        { 59, 51, 51, 50, 53, 55, 59, 86},
                        { 58, 50, 50, 49, 51, 54, 57, 85},
                        { 56, 49, 49, 48, 50, 52, 55, 84},
                        { 55, 48, 47, 47, 48, 51, 54, 83},
                        { 54, 46, 46, 46, 47, 49, 52, 83},
                        { 52, 45, 45, 45, 46, 48, 50, 82},
                        { 51, 44, 44, 43, 44, 46, 49, 81},
                        { 50, 43, 42, 42, 43, 45, 47, 80},
                        { 48, 41, 41, 41, 41, 43, 45, 79},
                        { 47, 40, 40, 40, 40, 42, 43, 79},
                        { 45,  0,  0,  0,  0, 40, 42, 78},
                        { 44,  0,  0,  0,  0,  0, 40, 77},
                        { 43,  0,  0,  0,  0,  0,  0, 76},
                        { 41,  0,  0,  0,  0,  0,  0, 76},
                        { 40,  0,  0,  0,  0,  0,  0, 75},
                        {  0,  0,  0,  0,  0,  0,  0, 74},
                        {  0,  0,  0,  0,  0,  0,  0, 73},
                        {  0,  0,  0,  0,  0,  0,  0, 73},
                        {  0,  0,  0,  0,  0,  0,  0, 72},
                        {  0,  0,  0,  0,  0,  0,  0, 71},
                        {  0,  0,  0,  0,  0,  0,  0, 70},
                        {  0,  0,  0,  0,  0,  0,  0, 70},
                        {  0,  0,  0,  0,  0,  0,  0, 69},
                        {  0,  0,  0,  0,  0,  0,  0, 68},
                        {  0,  0,  0,  0,  0,  0,  0, 67},
                        {  0,  0,  0,  0,  0,  0,  0, 67},
                        {  0,  0,  0,  0,  0,  0,  0, 66},
                        {  0,  0,  0,  0,  0,  0,  0, 65},
                        {  0,  0,  0,  0,  0,  0,  0, 64},
                        {  0,  0,  0,  0,  0,  0,  0, 64},
                        {  0,  0,  0,  0,  0,  0,  0, 63},
                        {  0,  0,  0,  0,  0,  0,  0, 62},
                        {  0,  0,  0,  0,  0,  0,  0, 61},
                        {  0,  0,  0,  0,  0,  0,  0, 61},
                        {  0,  0,  0,  0,  0,  0,  0, 60},
                        {  0,  0,  0,  0,  0,  0,  0, 59},
                        {  0,  0,  0,  0,  0,  0,  0, 58},
                        {  0,  0,  0,  0,  0,  0,  0, 57},
                        {  0,  0,  0,  0,  0,  0,  0, 57},
                        {  0,  0,  0,  0,  0,  0,  0, 56},
                        {  0,  0,  0,  0,  0,  0,  0, 55},
                        {  0,  0,  0,  0,  0,  0,  0, 54},
                        {  0,  0,  0,  0,  0,  0,  0, 54},
                        {  0,  0,  0,  0,  0,  0,  0, 53},
                        {  0,  0,  0,  0,  0,  0,  0, 52},
                        {  0,  0,  0,  0,  0,  0,  0, 51},
                        {  0,  0,  0,  0,  0,  0,  0, 51},
                        {  0,  0,  0,  0,  0,  0,  0, 50},
                        {  0,  0,  0,  0,  0,  0,  0, 49},
                        {  0,  0,  0,  0,  0,  0,  0, 48},
                        {  0,  0,  0,  0,  0,  0,  0, 48},
                        {  0,  0,  0,  0,  0,  0,  0, 47},
                        {  0,  0,  0,  0,  0,  0,  0, 46},
                        {  0,  0,  0,  0,  0,  0,  0, 45},
                        {  0,  0,  0,  0,  0,  0,  0, 45},
                        {  0,  0,  0,  0,  0,  0,  0, 44},
                        {  0,  0,  0,  0,  0,  0,  0, 43},
                        {  0,  0,  0,  0,  0,  0,  0, 42},
                        {  0,  0,  0,  0,  0,  0,  0, 42},
                        {  0,  0,  0,  0,  0,  0,  0, 41},
                        {  0,  0,  0,  0,  0,  0,  0, 40},
                        {  0,  0,  0,  0,  0,  0,  0,  0}
                };

                MUFMales=new int[][] {
                        {  100,100,  100,  100,  100,  100,  100,  100},
                        {  100, 99,100,  100,  100,  100,  100,  100},
                        {  100, 98, 99,  100,  100,  100,  100,  100},
                        {100, 98, 98,  100,  100,  100,  100,  100},
                        { 99, 97, 98,  100,  100,  100,  100,  100},
                        { 98, 96, 97,  100,  100,  100,  100,  100},
                        { 97, 95, 96,100,  100,  100,  100,  100},
                        { 97, 94, 95, 99,  100,  100,  100,  100},
                        { 96, 94, 95, 99,  100,  100,  100,  100},
                        { 95, 93, 94, 98,  100,  100,  100,  100},
                        { 94, 92, 93, 97,  100,  100,  100,  100},
                        { 93, 91, 92, 96,  100,  100,  100,  100},
                        { 92, 90, 91, 96,100,  100,  100,  100},
                        { 91, 89, 91, 95, 99,  100,  100,  100},
                        { 91, 89, 90, 94, 99,  100,  100,  100},
                        { 90, 88, 89, 93, 98,  100,  100,  100},
                        { 89, 87, 88, 93, 97,  100,  100,  100},
                        { 88, 86, 88, 92, 97,  100,  100,  100},
                        { 87, 85, 87, 91, 96,  100,  100,  100},
                        { 86, 85, 86, 90, 95,100,  100,  100},
                        { 85, 84, 85, 90, 94, 99,  100,  100},
                        { 85, 83, 84, 89, 94, 99,  100,  100},
                        { 84, 82, 84, 88, 93, 98,  100,  100},
                        { 83, 81, 83, 87, 92, 98,  100,  100},
                        { 82, 81, 82, 87, 92, 97,  100,  100},
                        { 81, 80, 81, 86, 91, 96,  100,  100},
                        { 80, 79, 81, 85, 90, 96,  100,  100},
                        { 79, 78, 80, 84, 90, 95,  100,  100},
                        { 79, 77, 79, 84, 89, 94,  100,  100},
                        { 78, 76, 78, 83, 88, 94,  100,  100},
                        { 77, 76, 77, 82, 87, 93,  100,  100},
                        { 76, 75, 77, 81, 87, 93,  100,  100},
                        { 75, 74, 76, 81, 86, 92,  100,  100},
                        { 74, 73, 75, 80, 85, 91,  100,  100},
                        { 73, 72, 74, 79, 85, 91,  100,  100},
                        { 73, 72, 74, 78, 84, 90,  100,  100},
                        { 72, 71, 73, 78, 83, 89,100,  100},
                        { 71, 70, 72, 77, 83, 89, 99,  100},
                        { 70, 69, 71, 76, 82, 88, 99,  100},
                        { 69, 68, 70, 75, 81, 88, 98,  100},
                        { 68, 68, 70, 75, 80, 87, 97,  100},
                        { 67, 67, 69, 74, 80, 86, 97,  100},
                        { 67, 66, 68, 73, 79, 86, 96,  100},
                        { 66, 65, 67, 72, 78, 85, 96,  100},
                        { 65, 64, 66, 72, 78, 84, 95,  100},
                        { 64, 64, 66, 71, 77, 84, 94,  100},
                        { 63, 63, 65, 70, 76, 83, 94,  100},
                        { 62, 62, 64, 69, 76, 83, 93,  100},
                        { 61, 61, 63, 69, 75, 82, 92,100},
                        { 61, 60, 63, 68, 74, 81, 92, 99},
                        { 60, 59, 62, 67, 73, 81, 91, 99},
                        { 59, 59, 61, 66, 73, 80, 90, 99},
                        { 58, 58, 60, 66, 72, 79, 90, 98},
                        { 57, 57, 59, 65, 71, 79, 89, 98},
                        { 56, 56, 59, 64, 71, 78, 89, 98},
                        { 55, 55, 58, 63, 70, 78, 88, 98},
                        { 55, 55, 57, 63, 69, 77, 87, 97},
                        { 54, 54, 56, 62, 69, 76, 87, 97},
                        { 53, 53, 56, 61, 68, 76, 86, 97},
                        { 52, 52, 55, 60, 67, 75, 85, 96},
                        { 51, 51, 54, 60, 67, 74, 85, 96},
                        { 50, 51, 53, 59, 66, 74, 84, 96},
                        { 49, 50, 52, 58, 65, 73, 83, 95},
                        { 49, 49, 52, 57, 64, 73, 83, 95},
                        { 48, 48, 51, 57, 64, 72, 82, 95},
                        { 47, 47, 50, 56, 63, 71, 81, 95},
                        { 46, 46, 49, 55, 62, 71, 81, 94},
                        { 45, 46, 49, 54, 62, 70, 80, 94},
                        { 44, 45, 48, 54, 61, 69, 80, 94},
                        { 43, 44, 47, 53, 60, 69, 79, 93},
                        { 43, 43, 46, 52, 60, 68, 78, 93},
                        { 42, 42, 45, 51, 59, 68, 78, 93},
                        { 41, 42, 45, 51, 58, 67, 77, 92},
                        { 40, 41, 44, 50, 57, 66, 76, 92},
                        {  0, 40, 43, 49, 57, 66, 76, 92},
                        {  0,  0, 42, 48, 56, 65, 75, 92},
                        {  0,  0, 42, 48, 55, 64, 74, 91},
                        {  0,  0, 41, 47, 55, 64, 74, 91},
                        {  0,  0, 40, 46, 54, 63, 73, 91},
                        {  0,  0,  0, 45, 53, 63, 73, 90},
                        {  0,  0,  0, 45, 53, 62, 72, 90},
                        {  0,  0,  0, 44, 52, 61, 71, 90},
                        {  0,  0,  0, 43, 51, 61, 71, 89},
                        {  0,  0,  0, 42, 50, 60, 70, 89},
                        {  0,  0,  0, 42, 50, 59, 69, 89},
                        {  0,  0,  0, 41, 49, 59, 69, 89},
                        {  0,  0,  0, 40, 48, 58, 68, 88},//3:30
                        {  0,  0,  0,  0, 48, 58, 67, 88},
                        {  0,  0,  0,  0, 47, 57, 67, 88},
                        {  0,  0,  0,  0, 46, 56, 66, 87},
                        {  0,  0,  0,  0, 46, 56, 66, 87},
                        {  0,  0,  0,  0, 45, 55, 65, 87},
                        {  0,  0,  0,  0, 44, 54, 64, 86},
                        {  0,  0,  0,  0, 43, 54, 64, 86},
                        {  0,  0,  0,  0, 43, 53, 63, 86},
                        {  0,  0,  0,  0, 42, 53, 62, 86},
                        {  0,  0,  0,  0, 41, 52, 62, 85},
                        {  0,  0,  0,  0, 41, 51, 61, 85},
                        {  0,  0,  0,  0, 40, 51, 60, 85},
                        {  0,  0,  0,  0,  0, 50, 60, 84},
                        {  0,  0,  0,  0,  0, 49, 59, 84},
                        {  0,  0,  0,  0,  0, 49, 59, 84},
                        {  0,  0,  0,  0,  0, 48, 58, 83},
                        {  0,  0,  0,  0,  0, 48, 57, 83},
                        {  0,  0,  0,  0,  0, 47, 57, 83},
                        {  0,  0,  0,  0,  0, 46, 56, 83},
                        {  0,  0,  0,  0,  0, 46, 55, 82},
                        {  0,  0,  0,  0,  0, 45, 55, 82},
                        {  0,  0,  0,  0,  0, 44, 54, 82},
                        {  0,  0,  0,  0,  0, 44, 53, 81},
                        {  0,  0,  0,  0,  0, 43, 53, 81},
                        {  0,  0,  0,  0,  0, 43, 52, 81},
                        {  0,  0,  0,  0,  0, 42, 51, 80},
                        {  0,  0,  0,  0,  0, 41, 51, 80},
                        {  0,  0,  0,  0,  0, 41, 50, 80},
                        {  0,  0,  0,  0,  0, 40, 50, 79},//3:59
                        {  0,  0,  0,  0,  0,  0, 49, 79},
                        {  0,  0,  0,  0,  0,  0, 48, 79},
                        {  0,  0,  0,  0,  0,  0, 48, 79},
                        {  0,  0,  0,  0,  0,  0, 47, 78},
                        {  0,  0,  0,  0,  0,  0, 46, 78},
                        {  0,  0,  0,  0,  0,  0, 46, 48},
                        {  0,  0,  0,  0,  0,  0, 45, 77},
                        {  0,  0,  0,  0,  0,  0, 44, 77},
                        {  0,  0,  0,  0,  0,  0, 44, 77},
                        {  0,  0,  0,  0,  0,  0, 43, 76},
                        {  0,  0,  0,  0,  0,  0, 73, 76},
                        {  0,  0,  0,  0,  0,  0, 72, 76},
                        {  0,  0,  0,  0,  0,  0, 41, 76},
                        {  0,  0,  0,  0,  0,  0, 41, 75},
                        {  0,  0,  0,  0,  0,  0, 40, 75},
                        {  0,  0,  0,  0,  0, 0, 0, 75},
                        {  0,  0,  0,  0,  0, 0, 0, 74},
                        {  0,  0,  0,  0,  0, 0, 0, 74},
                        {  0,  0,  0,  0,  0, 0, 0, 74},
                        {  0,  0,  0,  0,  0, 0, 0, 73},
                        {  0,  0,  0,  0,  0, 0, 0, 73},
                        {  0,  0,  0,  0,  0, 0, 0, 73},
                        {  0,  0,  0,  0,  0, 0, 0, 73},
                        {  0,  0,  0,  0,  0, 0, 0, 72},
                        {  0,  0,  0,  0,  0, 0, 0, 72},
                        {  0,  0,  0,  0,  0, 0, 0, 72},
                        {  0,  0,  0,  0,  0, 0, 0, 71},
                        {  0,  0,  0,  0,  0, 0, 0, 71},
                        {  0,  0,  0,  0,  0, 0, 0, 71},
                        {  0,  0,  0,  0,  0, 0, 0, 70},
                        {  0,  0,  0,  0,  0, 0, 0, 70},
                        {  0,  0,  0,  0,  0, 0, 0, 70},
                        {  0,  0,  0,  0,  0, 0, 0, 70},
                        {  0,  0,  0,  0,  0, 0, 0, 69},
                        {  0,  0,  0,  0,  0, 0, 0, 69},
                        {  0,  0,  0,  0,  0, 0, 0, 69},
                        {  0,  0,  0,  0,  0, 0, 0, 68},
                        {  0,  0,  0,  0,  0, 0, 0, 68},
                        {  0,  0,  0,  0,  0, 0, 0, 68},
                        {  0,  0,  0,  0,  0, 0, 0, 67},
                        {  0,  0,  0,  0,  0, 0, 0, 67},
                        {  0,  0,  0,  0,  0, 0, 0, 67},
                        {  0,  0,  0,  0,  0, 0, 0, 67},
                        {  0,  0,  0,  0,  0, 0, 0, 66},
                        {  0,  0,  0,  0,  0, 0, 0, 66},
                        {  0,  0,  0,  0,  0, 0, 0, 66},
                        {  0,  0,  0,  0,  0, 0, 0, 65},
                        {  0,  0,  0,  0,  0, 0, 0, 65},
                        {  0,  0,  0,  0,  0, 0, 0, 65},
                        {  0,  0,  0,  0,  0, 0, 0, 64},
                        {  0,  0,  0,  0,  0, 0, 0, 64},
                        {  0,  0,  0,  0,  0, 0, 0, 64},
                        {  0,  0,  0,  0,  0, 0, 0, 64},
                        {  0,  0,  0,  0,  0, 0, 0, 63},
                        {  0,  0,  0,  0,  0, 0, 0, 63},
                        {  0,  0,  0,  0,  0, 0, 0, 63},
                        {  0,  0,  0,  0,  0, 0, 0, 62},
                        {  0,  0,  0,  0,  0, 0, 0, 62},
                        {  0,  0,  0,  0,  0, 0, 0, 62},
                        {  0,  0,  0,  0,  0, 0, 0, 61},
                        {  0,  0,  0,  0,  0, 0, 0, 61},
                        {  0,  0,  0,  0,  0, 0, 0, 61},
                        {  0,  0,  0,  0,  0, 0, 0, 61},
                        {  0,  0,  0,  0,  0, 0, 0, 60},
                        {  0,  0,  0,  0,  0, 0, 0, 60},
                        {  0,  0,  0,  0,  0, 0, 0, 60},
                        {  0,  0,  0,  0,  0, 0, 0, 59},
                        {  0,  0,  0,  0,  0, 0, 0, 59},
                        {  0,  0,  0,  0,  0, 0, 0, 59},
                        {  0,  0,  0,  0,  0, 0, 0, 58},
                        {  0,  0,  0,  0,  0, 0, 0, 58},
                        {  0,  0,  0,  0,  0, 0, 0, 58},
                        {  0,  0,  0,  0,  0, 0, 0, 57},
                        {  0,  0,  0,  0,  0, 0, 0, 57},
                        {  0,  0,  0,  0,  0, 0, 0, 57},
                        {  0,  0,  0,  0,  0, 0, 0, 57},
                        {  0,  0,  0,  0,  0, 0, 0, 56},
                        {  0,  0,  0,  0,  0, 0, 0, 56},
                        {  0,  0,  0,  0,  0, 0, 0, 56},
                        {  0,  0,  0,  0,  0, 0, 0, 55},
                        {  0,  0,  0,  0,  0, 0, 0, 55},
                        {  0,  0,  0,  0,  0, 0, 0, 55},
                        {  0,  0,  0,  0,  0, 0, 0, 54},
                        {  0,  0,  0,  0,  0, 0, 0, 54},
                        {  0,  0,  0,  0,  0, 0, 0, 54},
                        {  0,  0,  0,  0,  0, 0, 0, 54},
                        {  0,  0,  0,  0,  0, 0, 0, 53},
                        {  0,  0,  0,  0,  0, 0, 0, 53},
                        {  0,  0,  0,  0,  0, 0, 0, 53},
                        {  0,  0,  0,  0,  0, 0, 0, 52},
                        {  0,  0,  0,  0,  0, 0, 0, 52},
                        {  0,  0,  0,  0,  0, 0, 0, 52},
                        {  0,  0,  0,  0,  0, 0, 0, 51},
                        {  0,  0,  0,  0,  0, 0, 0, 51},
                        {  0,  0,  0,  0,  0, 0, 0, 51},
                        {  0,  0,  0,  0,  0, 0, 0, 51},
                        {  0,  0,  0,  0,  0, 0, 0, 50},
                        {  0,  0,  0,  0,  0, 0, 0, 50},
                        {  0,  0,  0,  0,  0, 0, 0, 50},
                        {  0,  0,  0,  0,  0, 0, 0, 49},
                        {  0,  0,  0,  0,  0, 0, 0, 49},
                        {  0,  0,  0,  0,  0, 0, 0, 49},
                        {  0,  0,  0,  0,  0, 0, 0, 48},
                        {  0,  0,  0,  0,  0, 0, 0, 48},
                        {  0,  0,  0,  0,  0, 0, 0, 48},
                        {  0,  0,  0,  0,  0, 0, 0, 48},
                        {  0,  0,  0,  0,  0, 0, 0, 47},
                        {  0,  0,  0,  0,  0, 0, 0, 47},
                        {  0,  0,  0,  0,  0, 0, 0, 47},
                        {  0,  0,  0,  0,  0, 0, 0, 46},
                        {  0,  0,  0,  0,  0, 0, 0, 46},
                        {  0,  0,  0,  0,  0, 0, 0, 46},
                        {  0,  0,  0,  0,  0, 0, 0, 45},
                        {  0,  0,  0,  0,  0, 0, 0, 45},
                        {  0,  0,  0,  0,  0, 0, 0, 45},
                        {  0,  0,  0,  0,  0, 0, 0, 45},
                        {  0,  0,  0,  0,  0, 0, 0, 44},
                        {  0,  0,  0,  0,  0, 0, 0, 44},
                        {  0,  0,  0,  0,  0, 0, 0, 44},
                        {  0,  0,  0,  0,  0, 0, 0, 43},
                        {  0,  0,  0,  0,  0, 0, 0, 43},
                        {  0,  0,  0,  0,  0, 0, 0, 43},
                        {  0,  0,  0,  0,  0, 0, 0, 42},
                        {  0,  0,  0,  0,  0, 0, 0, 42},
                        {  0,  0,  0,  0,  0, 0, 0, 42},
                        {  0,  0,  0,  0,  0, 0, 0, 42},
                        {  0,  0,  0,  0,  0, 0, 0, 41},
                        {  0,  0,  0,  0,  0, 0, 0, 41},
                        {  0,  0,  0,  0,  0, 0, 0, 41},
                        {  0,  0,  0,  0,  0, 0, 0, 40},
                        {  0,  0,  0,  0,  0, 0, 0, 0}
                }; //246 columns
                //CALCULATE SCORES FROM TABLES
                //get column number based on time
                int MTCColumn;

                if (tempMTCMin == 0)
                    MTCColumn = 149;
                else if (tempMTCMin<2)
                    MTCColumn = 0;
                else if (tempMTCMin==2)
                {
                    MTCColumn = tempMTCSec-38;
                    if(MTCColumn < 0)
                        MTCColumn = 0;
                }
                else
                {
                    MTCColumn = tempMTCMin-3;
                    MTCColumn = MTCColumn * 60;
                    MTCColumn = MTCColumn + 22;
                    MTCColumn = MTCColumn + tempMTCSec;
                }

                if (MTCColumn > 149)
                    MTCColumn = 149;

                int ACLColumn = 0;
                if (ACL > 120)
                    ACLColumn = 0;
                else
                {
                    ACLColumn = Math.abs(ACL-120);
                    if(ACLColumn >105)
                        ACLColumn = 105;
                }


                int MUFColumn = 246;
                if (tempMUFMin == 0)
                {
                    MUFColumn = 246;
                }
                else if (tempMUFMin < 2)
                {
                    MUFColumn = 0;
                }
                else if (tempMUFMin == 2)
                {
                    MUFColumn = tempMUFSec - 4;
                    if(MUFColumn < 0)
                        MUFColumn = 0;
                }
                else
                {
                    MUFColumn = tempMUFMin - 3;
                    MUFColumn = MUFColumn * 60;
                    MUFColumn = MUFColumn + 56;
                    MUFColumn = MUFColumn + MUFSec;
                }
                if (MUFColumn > 246)
                    MUFColumn = 246;

                MTCScore = MTCMales[MTCColumn][ageGroup];
                ACLScore = ACLMales[ACLColumn][ageGroup];
                MUFScore = MUFMales[MUFColumn][ageGroup];

            }
            else {//female tables
                MTCFemales=new int[][] {
                        {100,100,100,100,100,100,100,100},
                        {100,100, 99,100,100,100,100,100},
                        {100,100, 99,100,100,100,100,100},
                        {100,100, 98, 99,100,100,100,100},
                        {100, 99, 97, 99,100,100,100,100},
                        {100, 99, 97, 98,100,100,100,100},
                        {100, 98, 96, 97,100,100,100,100},
                        {100, 97, 96, 97,100,100,100,100},
                        {100, 97, 95, 96,100,100,100,100},
                        {100, 97, 94, 96, 99,100,100,100},
                        { 99, 95, 94, 95, 99,100,100,100},
                        { 98, 95, 93, 94, 98,100,100,100},
                        { 98, 94, 92, 94, 98,100,100,100},
                        { 97, 93, 92, 93, 97,100,100,100},
                        { 96, 93, 91, 92, 96,100,100,100},//3:24
                        { 95, 92, 91, 92, 96,100,100,100},
                        { 95, 91, 90, 91, 95, 99,100,100},
                        { 94, 90, 89, 90, 94, 99,100,100},
                        { 93, 90, 89, 90, 94, 98,100,100},
                        { 92, 89, 88, 89, 93, 97,100,100},
                        { 91, 88, 87, 89, 93, 97,100,100},
                        { 91, 88, 87, 88, 92, 96,100,100},
                        { 90, 87, 86, 87, 91, 95,100,100},
                        { 89, 86, 85, 87, 91, 95,100,100},
                        { 88, 86, 85, 86, 90, 94,100,100},
                        { 88, 85, 84, 85, 89, 94,100,100},
                        { 87, 84, 84, 85, 89, 93,100,100},
                        { 86, 84, 83, 84, 88, 92,100,100},
                        { 85, 83, 82, 83, 88, 92,100,100},//3:38
                        { 84, 82, 82, 83, 87, 91,100,100},
                        { 84, 82, 81, 82, 86, 90, 99,100},
                        { 83, 81, 80, 81, 86, 90, 99,100},
                        { 82, 80, 80, 81, 85, 89, 98,100},
                        { 81, 80, 79, 80, 85, 88, 98,100},
                        { 81, 79, 79, 80, 84, 88, 97,100},
                        { 80, 78, 78, 79, 83, 87, 97,100},
                        { 79, 78, 77, 78, 83, 86, 96,100},
                        { 78, 77, 77, 78, 82, 86, 96,100},
                        { 77, 76, 76, 77, 81, 85, 95,100},
                        { 77, 75, 75, 76, 81, 85, 94,100},
                        { 76, 75, 75, 76, 80, 84, 94,100},
                        { 75, 74, 74, 75, 80, 83, 93,100},
                        { 74, 73, 73, 74, 79, 83, 93,100},
                        { 74, 73, 73, 74, 78, 82, 92,100},
                        { 73, 72, 72, 73, 78, 81, 92,100},//3:54
                        { 72, 71, 72, 73, 77, 81, 91,100},
                        { 71, 71, 71, 72, 76, 80, 90, 99},
                        { 70, 70, 70, 71, 76, 79, 90, 99},
                        { 70, 69, 70, 71, 75, 79, 89, 98},
                        { 69, 69, 69, 70, 75, 78, 89, 98},
                        { 68, 68, 68, 69, 74, 77, 88, 97},
                        { 67, 67, 68, 69, 73, 77, 88, 97},
                        { 66, 67, 67, 68, 73, 76, 87, 96},
                        { 66, 66, 67, 67, 72, 75, 87, 96},
                        { 65, 65, 66, 67, 72, 75, 86, 95},
                        { 64, 65, 65, 66, 71, 74, 85, 95},
                        { 63, 64, 65, 66, 70, 74, 85, 94},
                        { 63, 63, 64, 65, 70, 73, 84, 94},
                        { 62, 63, 63, 64, 69, 72, 84, 93},
                        { 61, 62, 63, 64, 68, 72, 83, 93},
                        { 60, 61, 62, 63, 68, 71, 83, 92},
                        { 59, 60, 61, 62, 67, 70, 82, 92},
                        { 59, 60, 61, 62, 67, 70, 81, 91},
                        { 58, 59, 60, 61, 66, 69, 81, 91},
                        { 57, 58, 60, 60, 65, 68, 80, 90},
                        { 56, 58, 59, 60, 65, 68, 80, 90},
                        { 56, 57, 58, 59, 64, 67, 79, 89},
                        { 55, 56, 58, 59, 64, 66, 79, 89},
                        { 54, 56, 57, 58, 63, 66, 78, 88},
                        { 53, 55, 56, 57, 62, 65, 78, 88},
                        { 52, 54, 56, 57, 62, 65, 77, 87},
                        { 52, 54, 55, 56, 61, 64, 76, 87},
                        { 51, 53, 55, 55, 60, 63, 76, 86},
                        { 50, 52, 54, 55, 60, 63, 75, 86},
                        { 49, 52, 53, 54, 59, 62, 75, 85},
                        { 49, 51, 53, 53, 59, 61, 74, 85},
                        { 48, 50, 52, 53, 58, 61, 74, 84},
                        { 47, 50, 51, 52, 57, 60, 73, 84},
                        { 46, 49, 51, 51, 57, 59, 73, 83},
                        { 45, 48, 50, 51, 56, 59, 72, 83},
                        { 45, 48, 49, 50, 55, 58, 71, 82},
                        { 44, 47, 49, 50, 55, 57, 71, 82},
                        { 43, 46, 48, 49, 54, 57, 70, 81},
                        { 42, 45, 48, 48, 54, 56, 70, 81},
                        { 42, 45, 47, 48, 53, 55, 69, 80},
                        { 41, 44, 46, 47, 52, 55, 69, 79},
                        { 40, 43, 46, 46, 52, 54, 68, 79},//4:36
                        {  0, 43, 45, 46, 51, 54, 67, 78},
                        {  0, 42, 44, 45, 51, 53, 67, 78},
                        {  0, 41, 44, 44, 50, 52, 66, 77},
                        {  0, 41, 43, 44, 49, 52, 66, 77},
                        {  0, 40, 43, 43, 49, 51, 65, 76},
                        {  0,  0, 42, 43, 48, 50, 65, 76},
                        {  0,  0, 41, 42, 47, 50, 64, 75},
                        {  0,  0, 41, 41, 47, 49, 64, 75},//4:44
                        {  0,  0, 40, 41, 46, 48, 63, 74},
                        {  0,  0,  0, 40, 46, 48, 62, 74},
                        {  0,  0,  0,  0, 45, 47, 62, 73},
                        {  0,  0,  0,  0, 44, 46, 61, 73},
                        {  0,  0,  0,  0, 44, 46, 61, 72},
                        {  0,  0,  0,  0, 43, 45, 60, 72},
                        {  0,  0,  0,  0, 42, 45, 60, 71},
                        {  0,  0,  0,  0, 42, 44, 59, 71},
                        {  0,  0,  0,  0, 41, 43, 59, 70},
                        {  0,  0,  0,  0, 41, 43, 58, 70},
                        {  0,  0,  0,  0, 40, 42, 57, 69},//4:55
                        {  0,  0,  0,  0,  0, 41, 57, 69},
                        {  0,  0,  0,  0,  0, 41, 56, 68},
                        {  0,  0,  0,  0,  0, 40, 56, 68},
                        {  0,  0,  0,  0,  0,  0, 55, 67},
                        {  0,  0,  0,  0,  0,  0, 55, 67},
                        {  0,  0,  0,  0,  0,  0, 54, 66},
                        {  0,  0,  0,  0,  0,  0, 53, 66},
                        {  0,  0,  0,  0,  0,  0, 53, 65},
                        {  0,  0,  0,  0,  0,  0, 52, 65},
                        {  0,  0,  0,  0,  0,  0, 52, 64},
                        {  0,  0,  0,  0,  0,  0, 51, 64},
                        {  0,  0,  0,  0,  0,  0, 51, 63},
                        {  0,  0,  0,  0,  0,  0, 50, 63},
                        {  0,  0,  0,  0,  0,  0, 50, 62},
                        {  0,  0,  0,  0,  0,  0, 49, 62},
                        {  0,  0,  0,  0,  0,  0, 48, 61},
                        {  0,  0,  0,  0,  0,  0, 48, 61},
                        {  0,  0,  0,  0,  0,  0, 47, 60},
                        {  0,  0,  0,  0,  0,  0, 47, 59},
                        {  0,  0,  0,  0,  0,  0, 46, 59},
                        {  0,  0,  0,  0,  0,  0, 46, 58},
                        {  0,  0,  0,  0,  0,  0, 45, 58},
                        {  0,  0,  0,  0,  0,  0, 44, 57},
                        {  0,  0,  0,  0,  0,  0, 44, 57},
                        {  0,  0,  0,  0,  0,  0, 43, 56},
                        {  0,  0,  0,  0,  0,  0, 43, 56},
                        {  0,  0,  0,  0,  0,  0, 42, 55},
                        {  0,  0,  0,  0,  0,  0, 42, 55},//5:23
                        {  0,  0,  0,  0,  0,  0, 41, 54},
                        {  0,  0,  0,  0,  0,  0, 41, 54},
                        {  0,  0,  0,  0,  0,  0, 40, 53},
                        {  0,  0,  0,  0,  0,  0,  0, 53},
                        {  0,  0,  0,  0,  0,  0,  0, 52},
                        {  0,  0,  0,  0,  0,  0,  0, 52},
                        {  0,  0,  0,  0,  0,  0,  0, 51},
                        {  0,  0,  0,  0,  0,  0,  0, 51},
                        {  0,  0,  0,  0,  0,  0,  0, 50},
                        {  0,  0,  0,  0,  0,  0,  0, 50},
                        {  0,  0,  0,  0,  0,  0,  0, 49},
                        {  0,  0,  0,  0,  0,  0,  0, 49},
                        {  0,  0,  0,  0,  0,  0,  0, 48},
                        {  0,  0,  0,  0,  0,  0,  0, 48},
                        {  0,  0,  0,  0,  0,  0,  0, 47},
                        {  0,  0,  0,  0,  0,  0,  0, 47},
                        {  0,  0,  0,  0,  0,  0,  0, 46},
                        {  0,  0,  0,  0,  0,  0,  0, 46},
                        {  0,  0,  0,  0,  0,  0,  0, 45},
                        {  0,  0,  0,  0,  0,  0,  0, 45},
                        {  0,  0,  0,  0,  0,  0,  0, 44},
                        {  0,  0,  0,  0,  0,  0,  0, 44},
                        {  0,  0,  0,  0,  0,  0,  0, 43},
                        {  0,  0,  0,  0,  0,  0,  0, 43},
                        {  0,  0,  0,  0,  0,  0,  0, 42},
                        {  0,  0,  0,  0,  0,  0,  0, 42},
                        {  0,  0,  0,  0,  0,  0,  0, 41},
                        {  0,  0,  0,  0,  0,  0,  0, 41},
                        {  0,  0,  0,  0,  0,  0,  0, 40},
                        {  0,  0,  0,  0,  0,  0,  0,  0}

                };// 162 rows

                ACLFemales= new int[][]{
                        {100,100,100,100,100,100,100,100},
                        {100,100,100, 99,100,100,100,100},
                        {100, 99, 97,100,100,100,100,100},
                        {100, 97, 96,100,100,100,100,100},
                        {100, 96, 95, 99,100,100,100,100},
                        {100, 95, 93, 97,100,100,100,100},
                        {100, 93, 92, 96, 99,100,100,100},
                        {100, 92, 91, 94, 97,100,100,100},
                        {100, 90, 89, 93, 96,100,100,100},//67
                        {100, 89, 88, 91, 94,100,100,100},
                        { 98, 88, 87, 90, 93,100,100,100},
                        { 97, 86, 85, 89, 91,100,100,100},
                        { 95, 85, 84, 87, 90,100,100,100},
                        { 93, 84, 83, 86, 88,100,100,100},
                        { 92, 82, 81, 84, 87, 98,100,100},
                        { 90, 81, 80, 83, 85, 96,100,100},
                        { 88, 80, 79, 81, 84, 95,100,100},
                        { 87, 78, 77, 80, 82, 93,100,100},
                        { 85, 77, 76, 79, 81, 91,100,100},
                        { 83, 75, 75, 77, 79, 89,100,100},
                        { 82, 74, 73, 76, 78, 88,100,100},
                        { 80, 73, 72, 74, 76, 86,100,100},
                        { 78, 71, 71, 73, 75, 84,100,100},
                        { 77, 70, 69, 71, 73, 82, 98,100},
                        { 75, 69, 68, 70, 72, 81, 96,100},
                        { 73, 67, 67, 69, 70, 79, 93,100},
                        { 72, 66, 65, 67, 69, 77, 91,100},
                        { 70, 65, 64, 66, 67, 75, 89,100},
                        { 68, 63, 63, 64, 66, 74, 87,100},
                        { 67, 62, 61, 63, 64, 72, 84,100},
                        { 65, 60, 60, 61, 63, 70, 82,100},
                        { 63, 59, 59, 60, 61, 68, 80,100},
                        { 62, 58, 57, 59, 60, 66, 78, 98},
                        { 60, 56, 56, 57, 58, 65, 76, 97},
                        { 58, 55, 55, 56, 57, 63, 73, 95},
                        { 57, 54, 53, 54, 55, 61, 71, 94},
                        { 55, 52, 52, 53, 54, 59, 69, 92},
                        { 53, 51, 51, 51, 52, 58, 67, 91},
                        { 52, 50, 49, 50, 51, 56, 64, 89},
                        { 50, 48, 48, 49, 49, 54, 62, 87},
                        { 48, 47, 47, 47, 48, 52, 60, 86},
                        { 47, 45, 45, 46, 46, 51, 58, 84},
                        { 45, 44, 44, 44, 45, 49, 56, 83},
                        { 43, 43, 43, 43, 43, 47, 53, 81},
                        { 42, 41, 41, 41, 42, 45, 51, 79},
                        { 40, 40, 40, 40, 40, 44, 49, 78},
                        {  0,  0,  0,  0,  0, 42, 47, 76},
                        {  0,  0,  0,  0,  0, 40, 44, 75},
                        {  0,  0,  0,  0,  0,  0, 42, 73},
                        {  0,  0,  0,  0,  0,  0, 40, 72},
                        {  0,  0,  0,  0,  0,  0,  0, 70},
                        {  0,  0,  0,  0,  0,  0,  0, 68},
                        {  0,  0,  0,  0,  0,  0,  0, 67},
                        {  0,  0,  0,  0,  0,  0,  0, 65},
                        {  0,  0,  0,  0,  0,  0,  0, 64},
                        {  0,  0,  0,  0,  0,  0,  0, 62},
                        {  0,  0,  0,  0,  0,  0,  0, 61},
                        {  0,  0,  0,  0,  0,  0,  0, 59},
                        {  0,  0,  0,  0,  0,  0,  0, 57},
                        {  0,  0,  0,  0,  0,  0,  0, 56},
                        {  0,  0,  0,  0,  0,  0,  0, 54},
                        {  0,  0,  0,  0,  0,  0,  0, 53},
                        {  0,  0,  0,  0,  0,  0,  0, 51},
                        {  0,  0,  0,  0,  0,  0,  0, 49},
                        {  0,  0,  0,  0,  0,  0,  0, 48},
                        {  0,  0,  0,  0,  0,  0,  0, 46},
                        {  0,  0,  0,  0,  0,  0,  0, 45},
                        {  0,  0,  0,  0,  0,  0,  0, 43},
                        {  0,  0,  0,  0,  0,  0,  0, 42},
                        {  0,  0,  0,  0,  0,  0,  0, 40},
                        {  0,  0,  0,  0,  0,  0,  0,  0}
                };//70 rows

                MUFFemales=new int[][] {
                        {100,100,100,100,100,100,100,100},
                        {100,100, 99,100,100,100,100,100},
                        {100,100, 99,100,100,100,100,100},
                        {100,100, 98,100,100,100,100,100},
                        {100, 99, 98,100,100,100,100,100},
                        {100, 99, 97,100,100,100,100,100},
                        {100, 98, 97,100,100,100,100,100},
                        {100, 98, 96,100,100,100,100,100},
                        {100, 97, 96, 99,100,100,100,100},
                        {100, 97, 95, 99,100,100,100,100},
                        {100, 96, 95, 98,100,100,100,100},
                        {100, 96, 94, 98,100,100,100,100},
                        {100, 95, 94, 97,100,100,100,100},
                        {100, 94, 93, 97, 99,100,100,100},
                        { 99, 94, 93, 96, 99,100,100,100},
                        { 99, 93, 92, 96, 98,100,100,100},
                        { 98, 93, 92, 95, 98,100,100,100},
                        { 98, 92, 91, 95, 97, 99,100,100},
                        { 97, 92, 91, 94, 97, 99,100,100},
                        { 97, 91, 90, 94, 96, 98,100,100},
                        { 96, 91, 90, 93, 96, 98,100,100},
                        { 96, 90, 89, 93, 95, 97,100,100},
                        { 95, 90, 89, 92, 95, 97,100,100},
                        { 95, 89, 88, 92, 94, 96,100,100},
                        { 94, 88, 88, 91, 94, 96,100,100},
                        { 94, 88, 87, 91, 93, 95,100,100},
                        { 93, 87, 87, 90, 93, 95,100,100},
                        { 93, 87, 86, 90, 92, 94,100,100},
                        { 92, 86, 86, 89, 92, 94,100,100},
                        { 92, 86, 85, 89, 91, 93,100,100},
                        { 91, 85, 85, 88, 91, 93,100,100},//3:12
                        { 91, 85, 84, 87, 90, 92,100,100},
                        { 90, 84, 84, 87, 90, 92,100,100},
                        { 90, 83, 83, 86, 89, 91,100,100},
                        { 89, 83, 83, 86, 89, 91,100,100},
                        { 89, 82, 82, 85, 88, 90,100,100},
                        { 88, 82, 82, 85, 88, 90,100,100},
                        { 88, 81, 81, 84, 87, 89,100,100},
                        { 87, 81, 81, 84, 87, 89,100,100},
                        { 87, 80, 80, 83, 86, 88,100,100},
                        { 86, 80, 80, 83, 86, 88,100,100},
                        { 86, 79, 79, 82, 85, 87,100,100},
                        { 85, 79, 79, 82, 85, 87,100,100},
                        { 85, 78, 78, 81, 84, 86,100,100},
                        { 84, 77, 78, 81, 84, 86,100,100},
                        { 84, 77, 77, 80, 83, 85,100,100},
                        { 83, 76, 77, 80, 83, 85,100,100},
                        { 83, 76, 76, 79, 82, 85,100,100},
                        { 82, 75, 76, 79, 82, 84,100,100},
                        { 82, 75, 75, 78, 81, 84,100,100},
                        { 81, 74, 75, 78, 81, 83,100,100},
                        { 81, 74, 74, 77, 80, 83,100,100},
                        { 80, 73, 74, 77, 80, 82,100,100},
                        { 80, 72, 73, 76, 80, 82,100,100},
                        { 79, 72, 73, 75, 79, 81, 99,100},
                        { 79, 71, 72, 75, 79, 81, 99,100},
                        { 78, 71, 72, 74, 78, 80, 98,100},
                        { 78, 70, 71, 74, 78, 80, 97,100},
                        { 77, 70, 71, 73, 77, 79, 97,100},
                        { 77, 69, 70, 73, 77, 79, 96,100},
                        { 76, 69, 69, 72, 76, 78, 95,100},
                        { 76, 68, 69, 72, 76, 78, 95,100},
                        { 75, 68, 68, 71, 75, 77, 94,100},
                        { 75, 67, 68, 71, 75, 77, 93, 99},
                        { 74, 66, 67, 70, 74, 76, 93, 99},
                        { 74, 66, 67, 70, 74, 76, 92, 99},
                        { 73, 65, 66, 69, 73, 75, 91, 98},
                        { 73, 65, 66, 69, 73, 75, 91, 98},
                        { 72, 64, 65, 68, 72, 74, 90, 98},
                        { 72, 64, 65, 68, 72, 74, 89, 97},
                        { 71, 63, 64, 67, 71, 73, 89, 97},
                        { 71, 63, 64, 67, 71, 73, 88, 96},
                        { 70, 62, 63, 66, 70, 72, 87, 96},
                        { 69, 61, 63, 66, 70, 72, 87, 96},
                        { 69, 61, 62, 65, 69, 71, 86, 95},
                        { 68, 60, 62, 65, 69, 71, 85, 95},
                        { 68, 60, 61, 64, 68, 70, 85, 95},
                        { 67, 59, 61, 63, 68, 70, 84, 94},
                        { 67, 59, 60, 63, 67, 70, 84, 94},
                        { 66, 58, 60, 62, 67, 69, 83, 94},
                        { 66, 58, 59, 62, 66, 69, 82, 93},
                        { 65, 57, 59, 61, 66, 68, 82, 93},
                        { 65, 57, 58, 61, 65, 68, 81, 93},
                        { 64, 56, 58, 60, 65, 67, 80, 92},
                        { 64, 55, 57, 60, 64, 67, 80, 92},
                        { 63, 55, 57, 59, 64, 66, 79, 92},
                        { 63, 54, 56, 59, 63, 66, 78, 91},
                        { 62, 54, 56, 58, 63, 65, 78, 91},
                        { 62, 53, 55, 58, 62, 65, 77, 91},
                        { 61, 53, 55, 57, 62, 64, 76, 90},//4:11
                        { 61, 52, 54, 57, 61, 64, 76, 90},
                        { 60, 52, 54, 56, 61, 63, 75, 89},
                        { 60, 51, 53, 56, 60, 63, 74, 89},
                        { 59, 50, 53, 55, 60, 62, 74, 89},
                        { 59, 50, 52, 55, 60, 62, 73, 88},
                        { 58, 49, 52, 54, 59, 61, 72, 88},
                        { 58, 49, 51, 54, 59, 61, 72, 88},
                        { 57, 48, 51, 53, 58, 60, 71, 87},
                        { 57, 48, 50, 53, 58, 60, 70, 87},
                        { 56, 47, 50, 52, 57, 59, 70, 87},
                        { 56, 47, 49, 51, 57, 59, 69, 86},
                        { 55, 46, 49, 51, 56, 58, 68, 86},
                        { 55, 46, 48, 50, 56, 58, 68, 86},
                        { 54, 45, 48, 50, 55, 57, 67, 85},
                        { 54, 44, 47, 49, 55, 57, 66, 85},
                        { 53, 44, 47, 49, 54, 56, 66, 85},
                        { 53, 43, 46, 48, 54, 56, 65, 84},
                        { 52, 43, 46, 48, 53, 55, 64, 84},
                        { 52, 42, 45, 47, 53, 55, 64, 84},
                        { 51, 42, 45, 47, 52, 55, 63, 83},
                        { 51, 41, 44, 46, 52, 54, 62, 83},
                        { 50, 41, 44, 46, 51, 54, 62, 82},
                        { 50, 40, 43, 45, 51, 53, 61, 82},//4:34
                        { 49,  0, 43, 45, 50, 53, 60, 82},
                        { 49,  0, 42, 44, 50, 52, 60, 81},
                        { 48,  0, 42, 44, 49, 52, 59, 81},
                        { 48,  0, 41, 43, 49, 51, 58, 81},
                        { 47,  0, 41, 43, 48, 51, 58, 80},
                        { 47,  0, 40, 42, 48, 50, 57, 80},
                        { 46,  0,  0, 42, 47, 50, 56, 80},
                        { 46,  0,  0, 41, 47, 49, 56, 79},
                        { 45,  0,  0, 41, 46, 49, 55, 79},
                        { 45,  0,  0, 40, 46, 48, 55, 79},
                        { 44,  0,  0,  0, 45, 48, 54, 78},
                        { 44,  0,  0,  0, 45, 47, 53, 78},
                        { 43,  0,  0,  0, 44, 47, 53, 78},
                        { 43,  0,  0,  0, 44, 46, 52, 77},
                        { 42,  0,  0,  0, 43, 46, 51, 77},
                        { 42,  0,  0,  0, 43, 45, 51, 76},
                        { 41,  0,  0,  0, 42, 45, 50, 76},
                        { 41,  0,  0,  0, 42, 44, 49, 76},
                        { 40,  0,  0,  0, 41, 44, 49, 75},
                        {  0,  0,  0,  0, 41, 43, 48, 75},
                        {  0,  0,  0,  0, 40, 43, 47, 75},
                        {  0,  0,  0,  0, 40, 42, 47, 74},
                        {  0,  0,  0,  0,  0, 42, 46, 74},
                        {  0,  0,  0,  0,  0, 41, 45, 74},
                        {  0,  0,  0,  0,  0, 41, 45, 73},
                        {  0,  0,  0,  0,  0, 40, 44, 73},
                        {  0,  0,  0,  0,  0, 40, 43, 73},
                        {  0,  0,  0,  0,  0,  0, 43, 72},
                        {  0,  0,  0,  0,  0,  0, 42, 72},
                        {  0,  0,  0,  0,  0,  0, 41, 72},
                        {  0,  0,  0,  0,  0,  0, 41, 71},
                        {  0,  0,  0,  0,  0,  0, 40, 71},
                        {  0,  0,  0,  0,  0,  0,  0, 71},
                        {  0,  0,  0,  0,  0, 0, 0, 70},
                        {  0,  0,  0,  0,  0, 0, 0, 70},
                        {  0,  0,  0,  0,  0, 0,  0, 69},
                        {  0,  0,  0,  0,  0, 0,  0, 69},
                        {  0,  0,  0,  0,  0, 0,  0, 69},
                        {  0,  0,  0,  0,  0, 0,  0, 68},
                        {  0,  0,  0,  0,  0, 0,  0, 68},
                        {  0,  0,  0,  0,  0, 0,  0, 68},
                        {  0,  0,  0,  0,  0, 0,  0, 67},
                        {  0,  0,  0,  0,  0, 0,  0, 67},
                        {  0,  0,  0,  0,  0, 0,  0, 67},
                        {  0,  0,  0,  0,  0, 0,  0, 66},
                        {  0,  0,  0,  0,  0, 0,  0, 66},
                        {  0,  0,  0,  0,  0, 0,  0, 66},
                        {  0,  0,  0,  0,  0, 0,  0, 65},
                        {  0,  0,  0,  0,  0, 0,  0, 65},
                        {  0,  0,  0,  0,  0, 0,  0, 65},
                        {  0,  0,  0,  0,  0, 0,  0, 64},
                        {  0,  0,  0,  0,  0, 0,  0, 64},
                        {  0,  0,  0,  0,  0, 0,  0, 64},
                        {  0,  0,  0,  0,  0, 0,  0, 63},
                        {  0,  0,  0,  0,  0, 0,  0, 63},
                        {  0,  0,  0,  0,  0, 0,  0, 62},
                        {  0,  0,  0,  0,  0, 0,  0, 62},
                        {  0,  0,  0,  0,  0, 0, 0, 62},
                        {  0,  0,  0,  0,  0, 0, 0, 61},
                        {  0,  0,  0,  0,  0, 0, 0, 61},
                        {  0,  0,  0,  0,  0, 0, 0, 61},
                        {  0,  0,  0,  0,  0, 0, 0, 60},
                        {  0,  0,  0,  0,  0, 0, 0, 60},
                        {  0,  0,  0,  0,  0, 0, 0, 60},
                        {  0,  0,  0,  0,  0, 0, 0, 59},
                        {  0,  0,  0,  0,  0, 0, 0, 59},
                        {  0,  0,  0,  0,  0, 0, 0, 59},
                        {  0,  0,  0,  0,  0, 0, 0, 58},
                        {  0,  0,  0,  0,  0, 0, 0, 58},
                        {  0,  0,  0,  0,  0, 0, 0, 58},
                        {  0,  0,  0,  0,  0, 0, 0, 57},
                        {  0,  0,  0,  0,  0, 0, 0, 57},
                        {  0,  0,  0,  0,  0, 0, 0, 56},
                        {  0,  0,  0,  0,  0, 0, 0, 56},
                        {  0,  0,  0,  0,  0, 0, 0, 56},
                        {  0,  0,  0,  0,  0, 0, 0, 55},
                        {  0,  0,  0,  0,  0, 0, 0, 55},
                        {  0,  0,  0,  0,  0, 0, 0, 55},
                        {  0,  0,  0,  0,  0, 0, 0, 54},
                        {  0,  0,  0,  0,  0, 0, 0, 54},
                        {  0,  0,  0,  0,  0, 0, 0, 54},
                        {  0,  0,  0,  0,  0, 0, 0, 53},
                        {  0,  0,  0,  0,  0, 0, 0, 53},
                        {  0,  0,  0,  0,  0, 0, 0, 53},
                        {  0,  0,  0,  0,  0, 0, 0, 52},
                        {  0,  0,  0,  0,  0, 0, 0, 52},
                        {  0,  0,  0,  0,  0, 0, 0, 52},
                        {  0,  0,  0,  0,  0, 0, 0, 51},
                        {  0,  0,  0,  0,  0, 0, 0, 51},
                        {  0,  0,  0,  0,  0, 0, 0, 51},
                        {  0,  0,  0,  0,  0, 0, 0, 50},
                        {  0,  0,  0,  0,  0, 0, 0, 50},
                        {  0,  0,  0,  0,  0, 0, 0, 49},
                        {  0,  0,  0,  0,  0, 0, 0, 49},
                        {  0,  0,  0,  0,  0, 0, 0, 49},
                        {  0,  0,  0,  0,  0, 0, 0, 48},
                        {  0,  0,  0,  0,  0, 0, 0, 48},
                        {  0,  0,  0,  0,  0, 0, 0, 48},
                        {  0,  0,  0,  0,  0, 0, 0, 47},
                        {  0,  0,  0,  0,  0, 0, 0, 47},
                        {  0,  0,  0,  0,  0, 0, 0, 47},
                        {  0,  0,  0,  0,  0, 0, 0, 46},
                        {  0,  0,  0,  0,  0, 0, 0, 46},
                        {  0,  0,  0,  0,  0, 0, 0, 46},
                        {  0,  0,  0,  0,  0, 0, 0, 45},
                        {  0,  0,  0,  0,  0, 0, 0, 45},
                        {  0,  0,  0,  0,  0, 0, 0, 45},
                        {  0,  0,  0,  0,  0, 0, 0, 44},
                        {  0,  0,  0,  0,  0, 0, 0, 44},
                        {  0,  0,  0,  0,  0, 0, 0, 44},
                        {  0,  0,  0,  0,  0, 0, 0, 43},
                        {  0,  0,  0,  0,  0, 0, 0, 43},
                        {  0,  0,  0,  0,  0, 0, 0, 42},
                        {  0,  0,  0,  0,  0, 0, 0, 42},
                        {  0,  0,  0,  0,  0, 0, 0, 42},
                        {  0,  0,  0,  0,  0, 0, 0, 41},
                        {  0,  0,  0,  0,  0, 0, 0, 41},
                        {  0,  0,  0,  0,  0, 0, 0, 41},
                        {  0,  0,  0,  0,  0, 0, 0, 40},
                        {  0,  0,  0,  0,  0, 0, 0, 0}
                }; //232 rows

                //get column number based on time
                int MTCColumn = 0;

                if (tempMTCMin == 0)
                    MTCColumn = 163;
                else if (tempMTCMin<3)
                    MTCColumn = 0;
                else if (tempMTCMin==3)
                {
                    MTCColumn = tempMTCSec-10;
                    if(MTCColumn < 0)
                        MTCColumn = 0;
                }
                else
                {
                    MTCColumn = tempMTCMin-4;
                    MTCColumn = MTCColumn * 60;
                    MTCColumn = MTCColumn + 50;
                    MTCColumn = MTCColumn + tempMTCSec;
                }
                if (MTCColumn > 163)
                    MTCColumn = 163;



                int ACLColumn = 0;
                if (ACL > 75)
                    ACLColumn = 0;
                else
                {
                    ACLColumn = Math.abs(ACL-75);
                    if(ACLColumn >70)
                        ACLColumn = 70;
                }


                int MUFColumn = 0;
                if (tempMUFMin == 0)
                {
                    MUFColumn = 232;
                }
                else if (tempMUFMin < 2)
                {
                    MUFColumn = 0;
                }
                else if (tempMUFMin == 2)
                {

                    MUFColumn = tempMUFSec - 42;
                    if(MUFColumn < 0)
                        MUFColumn = 0;
                }
                else
                {

                    MUFColumn = tempMUFMin - 3;
                    MUFColumn = MUFColumn * 60;
                    MUFColumn = MUFColumn + 18;
                    MUFColumn = MUFColumn + tempMUFSec;
                }
                if (MUFColumn > 232)
                    MUFColumn = 232;

                MTCScore = MTCFemales[MTCColumn][ageGroup];
                ACLScore = ACLFemales[ACLColumn][ageGroup];
                MUFScore = MUFFemales[MUFColumn][ageGroup];


            }

            TotalScore = MTCScore + ACLScore + MUFScore;

            if (MTCScore == 0 || ACLScore == 0 || MUFScore ==0)
                CFTClass = 0;
            else if (TotalScore < 150)
                CFTClass = 0;
            else if (TotalScore < 200)
                CFTClass = 3;
            else if (TotalScore < 235)
                CFTClass = 2;
            else
                CFTClass = 1;

        }
    }

